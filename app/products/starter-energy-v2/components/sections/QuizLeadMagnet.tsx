'use client';

import React, { useState } from 'react';
import { ChevronRight, CheckCircle, TrendingUp, Mail, Sparkles, ArrowRight } from 'lucide-react';
import AnimatedBackground from '../shared/AnimatedBackground';
import GradientText from '../shared/GradientText';
import GlassCard from '../shared/GlassCard';

type Answer = string | null;

export default function QuizLeadMagnet() {
  const [currentStep, setCurrentStep] = useState(0);
  const [answers, setAnswers] = useState<Answer[]>([null, null, null, null, null]);
  const [email, setEmail] = useState('');
  const [showResults, setShowResults] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);

  const questions = [
    {
      id: 1,
      question: '–ö–∞–∫ –±–∏ –æ—Ü–µ–Ω–∏–ª –µ–Ω–µ—Ä–≥–∏–π–Ω–∏—Ç–µ —Å–∏ –Ω–∏–≤–∞ –ø—Ä–µ–∑ –¥–µ–Ω—è?',
      options: [
        { label: '1-3: –ü–æ—Å—Ç–æ—è–Ω–Ω–æ —É–º–æ—Ä–µ–Ω', value: 'low', emoji: 'üò¥' },
        { label: '4-6: –°—Ä–µ–¥–Ω–æ, –Ω–æ –º–æ–∂–µ –ø–æ-–¥–æ–±—Ä–µ', value: 'medium', emoji: 'üòê' },
        { label: '7-8: –î–æ–±—Ä–µ, –Ω–æ –Ω–µ –∫–∞—Ç–æ –ø—Ä–µ–¥–∏', value: 'good', emoji: 'üôÇ' },
        { label: '9-10: –ü–µ—Ä—Ñ–µ–∫—Ç–Ω–æ', value: 'excellent', emoji: 'üí™' }
      ]
    },
    {
      id: 2,
      question: '–ö–æ–ª–∫–æ –ø—ä—Ç–∏ —Å–µ–¥–º–∏—á–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–∞—à?',
      options: [
        { label: '–ù–µ —Ç—Ä–µ–Ω–∏—Ä–∞–º —Ä–µ–¥–æ–≤–Ω–æ', value: 'none', emoji: '‚ùå' },
        { label: '1-2 –ø—ä—Ç–∏', value: 'light', emoji: 'üèÉ' },
        { label: '3-4 –ø—ä—Ç–∏', value: 'regular', emoji: 'üí™' },
        { label: '5+ –ø—ä—Ç–∏', value: 'intense', emoji: 'üî•' }
      ]
    },
    {
      id: 3,
      question: '–ö–∞–∫–≤–∏ –¥–æ–±–∞–≤–∫–∏ –≤–∑–µ–º–∞—à –ø–æ–Ω–∞—Å—Ç–æ—è—â–µ–º?',
      options: [
        { label: '–ù–∏–∫–∞–∫–≤–∏', value: 'none', emoji: 'üö´' },
        { label: '–ü—Ä–æ—Ç–µ–∏–Ω/–ö—Ä–µ–∞—Ç–∏–Ω', value: 'basic', emoji: 'üíä' },
        { label: '–¢–µ—Å—Ç–æ –±—É—Å—Ç–µ—Ä–∏', value: 'testo', emoji: 'üß™' },
        { label: '–ú–Ω–æ–≥–æ —Ä–∞–∑–ª–∏—á–Ω–∏', value: 'many', emoji: 'üí∞' }
      ]
    },
    {
      id: 4,
      question: '–ö–∞–∫–≤–∞ –µ –Ω–∞–π-–≤–∞–∂–Ω–∞—Ç–∞ —Ç–∏ —Ü–µ–ª?',
      options: [
        { label: '–ü–æ–≤–µ—á–µ –µ–Ω–µ—Ä–≥–∏—è', value: 'energy', emoji: '‚ö°' },
        { label: '–ü–æ–≤–µ—á–µ —Å–∏–ª–∞ –∏ –º—É—Å–∫—É–ª–∏', value: 'strength', emoji: 'üí™' },
        { label: '–ü–æ-–¥–æ–±—Ä–æ –ª–∏–±–∏–¥–æ', value: 'libido', emoji: '‚ù§Ô∏è' },
        { label: '–í—Å–∏—á–∫–æ –≥–æ—Ä–µ', value: 'all', emoji: 'üéØ' }
      ]
    },
    {
      id: 5,
      question: '–ö–æ–ª–∫–æ –≤—Ä–µ–º–µ —Å–µ –æ–ø–∏—Ç–≤–∞—à –¥–∞ –ø–æ–¥–æ–±—Ä–∏—à —Ç–µ–∑–∏ –Ω–µ—â–∞?',
      options: [
        { label: '–¢–æ–∫—É-—â–æ –∑–∞–ø–æ—á–≤–∞–º', value: 'new', emoji: 'üÜï' },
        { label: '1-3 –º–µ—Å–µ—Ü–∞', value: 'short', emoji: 'üìÖ' },
        { label: '6+ –º–µ—Å–µ—Ü–∞', value: 'medium', emoji: '‚è∞' },
        { label: '1+ –≥–æ–¥–∏–Ω–∞', value: 'long', emoji: 'üò§' }
      ]
    }
  ];

  const handleAnswer = (value: string) => {
    const newAnswers = [...answers];
    newAnswers[currentStep] = value;
    setAnswers(newAnswers);

    // Auto-advance to next question after 300ms
    setTimeout(() => {
      if (currentStep < questions.length - 1) {
        setCurrentStep(currentStep + 1);
      }
    }, 300);
  };

  const handleEmailSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);

    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 1000));

    setShowResults(true);
    setIsSubmitting(false);

    // Here you would send data to your backend/CRM
    console.log('Quiz Data:', { answers, email });
  };

  const getRecommendation = () => {
    const energyLevel = answers[0];
    const goal = answers[3];
    const duration = answers[4];

    if (energyLevel === 'low' || energyLevel === 'medium') {
      return {
        title: '–°–∏—Å—Ç–µ–º–∞—Ç–∞ –µ –ü–ï–†–§–ï–ö–¢–ù–ê –∑–∞ —Ç–µ–±',
        message: '–ë–∞–∑–∏—Ä–∞–π–∫–∏ —Å–µ –Ω–∞ –æ—Ç–≥–æ–≤–æ—Ä–∏—Ç–µ —Ç–∏, –∏–º–∞—à –û–ì–†–û–ú–ï–ù –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –∑–∞ –ø–æ–¥–æ–±—Ä–µ–Ω–∏–µ. –ü–æ–≤–µ—á–µ—Ç–æ –º—ä–∂–µ —Å —Ç–≤–æ—è –ø—Ä–æ—Ñ–∏–ª –≤–∏–∂–¥–∞—Ç +20-30% –ø–æ–¥–æ–±—Ä–µ–Ω–∏–µ –≤ –µ–Ω–µ—Ä–≥–∏—è—Ç–∞ –∑–∞ 14 –¥–Ω–∏.',
        urgency: '–ö—Ä–∏—Ç–∏—á–Ω–æ: –ö–æ–ª–∫–æ—Ç–æ –ø–æ-–¥—ä–ª–≥–æ —á–∞–∫–∞—à, —Ç–æ–ª–∫–æ–≤–∞ –ø–æ-—Ç—Ä—É–¥–Ω–æ —Å—Ç–∞–≤–∞.',
        package: 'Performance (127 –ª–≤) - –ü—Ä–µ–ø–æ—Ä—ä—á–∞–Ω'
      };
    }

    if (duration === 'long' || duration === 'medium') {
      return {
        title: '–í—Ä–µ–º–µ –µ –∑–∞ –°–ò–°–¢–ï–ú–ê, –Ω–µ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏',
        message: '–û–ø–∏—Ç–≤–∞—à —Å–µ –¥–æ—Å—Ç–∞—Ç—ä—á–Ω–æ –¥—ä–ª–≥–æ. –ü—Ä–æ–±–ª–µ–º—ä—Ç –Ω–µ –µ –º–æ—Ç–∏–≤–∞—Ü–∏—è—Ç–∞ - –ª–∏–ø—Å–≤–∞ —Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–∏—è—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª. 91% –æ—Ç –º—ä–∂–µ—Ç–µ —Å —Ç–≤–æ—è –ø—Ä–æ—Ñ–∏–ª –≤–∏–∂–¥–∞—Ç —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –∑–∞ –ø–æ–¥ 30 –¥–Ω–∏.',
        urgency: '–ù–µ –≥—É–±–∏ –æ—â–µ –≤—Ä–µ–º–µ —Å –Ω–µ–ø—ä–ª–Ω–∏ —Ä–µ—à–µ–Ω–∏—è.',
        package: 'Complete (179 –ª–≤) - –ó–∞ –º–∞–∫—Å —Ä–µ–∑—É–ª—Ç–∞—Ç–∏'
      };
    }

    return {
      title: '–û—Ç–ª–∏—á–µ–Ω –º–æ–º–µ–Ω—Ç –¥–∞ –∑–∞–ø–æ—á–Ω–µ—à –ü–†–ê–í–ò–õ–ù–û',
      message: '–í–º–µ—Å—Ç–æ –¥–∞ –≥—É–±–∏—à –º–µ—Å–µ—Ü–∏ —Å trial & error, –∑–∞–ø–æ—á–Ω–∏ —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞. –¢–æ–≤–∞ –∫–æ–µ—Ç–æ —â–µ—à–µ –¥–∞ —Ç–∏ –æ—Ç–Ω–µ–º–µ 6-12 –º–µ—Å–µ—Ü–∞ —Å–∞–º, –º–æ–∂–µ—à –¥–∞ –ø–æ—Å—Ç–∏–≥–Ω–µ—à –∑–∞ 30-60 –¥–Ω–∏.',
      urgency: '–°—Ç–∞—Ä—Ç advantage: –ó–∞–ø–æ—á–Ω–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ –æ—Ç –¥–µ–Ω 1.',
      package: 'Starter (67 –ª–≤) - –ü–µ—Ä—Ñ–µ–∫—Ç–µ–Ω –∑–∞ —Å—Ç–∞—Ä—Ç'
    };
  };

  const progress = ((currentStep + 1) / questions.length) * 100;

  if (showResults) {
    const recommendation = getRecommendation();

    return (
      <section id="quiz" className="relative py-20 md:py-32 overflow-hidden bg-gradient-to-br from-primary/5 via-green-500/5 to-blue-500/5">
        <AnimatedBackground variant="circles" opacity={0.08} />

        <div className="container mx-auto px-4 relative z-10">
          <div className="max-w-3xl mx-auto">
            <GlassCard className="p-8 md:p-12 text-center">
              <div className="mb-6">
                <div className="w-20 h-20 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-4">
                  <CheckCircle className="w-10 h-10 text-white" />
                </div>
                <h2 className="text-3xl md:text-4xl font-bold mb-4">
                  <GradientText>–ê–Ω–∞–ª–∏–∑—ä—Ç –µ –≥–æ—Ç–æ–≤!</GradientText>
                </h2>
                <p className="text-muted-foreground">–ë–∞–∑–∏—Ä–∞–Ω–æ –Ω–∞ —Ç–≤–æ–∏—Ç–µ –æ—Ç–≥–æ–≤–æ—Ä–∏</p>
              </div>

              <div className="bg-gradient-to-r from-amber-50 to-orange-50 dark:from-amber-950/30 dark:to-orange-950/30 border-2 border-amber-500/30 rounded-2xl p-8 mb-6">
                <h3 className="text-2xl font-bold text-foreground mb-3">{recommendation.title}</h3>
                <p className="text-lg text-foreground mb-4">{recommendation.message}</p>
                <div className="bg-red-500/10 border border-red-500/20 rounded-lg p-4 mb-4">
                  <p className="font-bold text-red-600 dark:text-red-400">{recommendation.urgency}</p>
                </div>
                <div className="bg-green-500/10 border border-green-500/20 rounded-lg p-4">
                  <p className="font-semibold text-foreground">
                    –ü—Ä–µ–ø–æ—Ä—ä—á–∞–Ω –ø–∞–∫–µ—Ç: <span className="text-green-600 dark:text-green-400 font-bold">{recommendation.package}</span>
                  </p>
                </div>
              </div>

              <div className="space-y-4">
                <button
                  onClick={() => {
                    const element = document.getElementById('pricing');
                    element?.scrollIntoView({ behavior: 'smooth', block: 'start' });
                  }}
                  className="group w-full bg-gradient-to-r from-primary via-blue-600 to-purple-600 text-white px-8 py-5 rounded-2xl font-bold text-xl shadow-2xl hover:shadow-primary/50 hover:scale-105 transition-all duration-300 flex items-center justify-center gap-2"
                >
                  <span>–í–∏–∂ –ü—Ä–µ–ø–æ—Ä—ä—á–∞–Ω–∏—è –ü–∞–∫–µ—Ç</span>
                  <ArrowRight className="w-6 h-6 group-hover:translate-x-2 transition-transform" />
                </button>

                <p className="text-sm text-muted-foreground">
                  ‚úì 30 –¥–Ω–∏ –≥–∞—Ä–∞–Ω—Ü–∏—è ‚Ä¢ ‚úì –ë–µ–∑ —Ä–∏—Å–∫ ‚Ä¢ ‚úì –°–∞–º–æ {answers[4] === 'long' ? '47' : '52'} –ø–∞–∫–µ—Ç–∞ –æ—Å—Ç–∞–Ω–∞–ª–∏
                </p>
              </div>
            </GlassCard>
          </div>
        </div>
      </section>
    );
  }

  return (
    <section id="quiz" className="relative py-20 md:py-32 overflow-hidden bg-gradient-to-br from-primary/5 via-green-500/5 to-blue-500/5">
      <AnimatedBackground variant="circles" opacity={0.08} />

      <div className="container mx-auto px-4 relative z-10">
        <div className="max-w-3xl mx-auto">

          {/* Header */}
          <div className="text-center mb-12">
            <div className="inline-flex items-center gap-2 bg-primary/10 backdrop-blur-sm border border-primary/20 rounded-full px-4 py-2 mb-4">
              <Sparkles className="w-4 h-4 text-primary" />
              <span className="text-sm font-semibold text-primary">–ë–µ–∑–ø–ª–∞—Ç–µ–Ω –¢–µ—Å—Ç</span>
            </div>

            <h2 className="text-3xl md:text-4xl lg:text-5xl font-bold mb-4">
              <GradientText from="from-primary" via="via-blue-600" to="to-purple-600">
                –í–ò–ñ –î–ê–õ–ò –°–ò–°–¢–ï–ú–ê–¢–ê –ï –ó–ê –¢–ï–ë
              </GradientText>
            </h2>

            <p className="text-xl text-muted-foreground">
              5 –≤—ä–ø—Ä–æ—Å–∞ ‚Ä¢ 30 —Å–µ–∫—É–Ω–¥–∏ ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∞ –ø—Ä–µ–ø–æ—Ä—ä–∫–∞
            </p>
          </div>

          {/* Progress Bar */}
          <div className="mb-8">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-semibold text-foreground">
                –í—ä–ø—Ä–æ—Å {currentStep + 1} –æ—Ç {questions.length}
              </span>
              <span className="text-sm font-semibold text-primary">{Math.round(progress)}%</span>
            </div>
            <div className="h-3 bg-neutral-200 dark:bg-neutral-800 rounded-full overflow-hidden">
              <div
                className="h-full bg-gradient-to-r from-primary via-blue-600 to-purple-600 transition-all duration-500 ease-out"
                style={{ width: `${progress}%` }}
              />
            </div>
          </div>

          {/* Question Card */}
          {currentStep < questions.length && (
            <GlassCard className="p-8 md:p-10">
              <div className="mb-8">
                <h3 className="text-2xl md:text-3xl font-bold text-foreground mb-2">
                  {questions[currentStep].question}
                </h3>
                <p className="text-sm text-muted-foreground">–ò–∑–±–µ—Ä–∏ –µ–¥–Ω–æ –æ—Ç —Å–ª–µ–¥–Ω–∏—Ç–µ:</p>
              </div>

              <div className="space-y-3">
                {questions[currentStep].options.map((option, idx) => (
                  <button
                    key={idx}
                    onClick={() => handleAnswer(option.value)}
                    className={`group w-full text-left p-5 rounded-xl border-2 transition-all duration-300 ${
                      answers[currentStep] === option.value
                        ? 'border-primary bg-primary/10 scale-105'
                        : 'border-border hover:border-primary/50 hover:bg-primary/5 hover:scale-102'
                    }`}
                  >
                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-4">
                        <div className="text-3xl">{option.emoji}</div>
                        <span className="text-lg font-semibold text-foreground">{option.label}</span>
                      </div>
                      <ChevronRight className="w-6 h-6 text-muted-foreground group-hover:text-primary group-hover:translate-x-1 transition-all" />
                    </div>
                  </button>
                ))}
              </div>

              {/* Navigation */}
              {currentStep > 0 && (
                <div className="mt-6 flex justify-between items-center">
                  <button
                    onClick={() => setCurrentStep(currentStep - 1)}
                    className="text-muted-foreground hover:text-foreground transition-colors font-medium"
                  >
                    ‚Üê –ù–∞–∑–∞–¥
                  </button>
                  {currentStep === questions.length - 1 && answers[currentStep] && (
                    <p className="text-sm text-primary font-semibold">–ü–æ—Å–ª–µ–¥–µ–Ω –≤—ä–ø—Ä–æ—Å!</p>
                  )}
                </div>
              )}
            </GlassCard>
          )}

          {/* Email Capture - Shows after all questions */}
          {currentStep === questions.length && !answers.includes(null) && (
            <GlassCard className="p-8 md:p-10">
              <div className="text-center mb-8">
                <div className="w-16 h-16 bg-gradient-to-r from-primary to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4">
                  <Mail className="w-8 h-8 text-white" />
                </div>
                <h3 className="text-2xl md:text-3xl font-bold text-foreground mb-2">
                  –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ!
                </h3>
                <p className="text-lg text-muted-foreground">
                  –í—ä–≤–µ–¥–∏ –∏–º–µ–π–ª –∑–∞ –¥–∞ –ø–æ–ª—É—á–∏—à –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∞—Ç–∞ —Å–∏ –ø—Ä–µ–ø–æ—Ä—ä–∫–∞
                </p>
              </div>

              <form onSubmit={handleEmailSubmit} className="space-y-4">
                <div>
                  <input
                    type="email"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    placeholder="—Ç–≤–æ—è—Ç@–∏–º–µ–π–ª.com"
                    required
                    className="w-full px-6 py-4 rounded-xl border-2 border-border focus:border-primary bg-background text-foreground text-lg outline-none transition-all"
                  />
                </div>

                <button
                  type="submit"
                  disabled={isSubmitting}
                  className="group w-full bg-gradient-to-r from-primary via-blue-600 to-purple-600 text-white px-8 py-5 rounded-2xl font-bold text-xl shadow-2xl hover:shadow-primary/50 hover:scale-105 transition-all duration-300 flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {isSubmitting ? (
                    <span>–ì–µ–Ω–µ—Ä–∏—Ä–∞ —Å–µ...</span>
                  ) : (
                    <>
                      <span>–í–∏–∂ –†–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ</span>
                      <TrendingUp className="w-6 h-6 group-hover:translate-x-2 transition-transform" />
                    </>
                  )}
                </button>

                <p className="text-xs text-center text-muted-foreground">
                  –ù—è–º–∞ –¥–∞ —Å–ø–æ–¥–µ–ª—è–º–µ –∏–º–µ–π–ª–∞ —Ç–∏. –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –≥–æ —Å–∞–º–æ –∑–∞ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏–º —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ.
                </p>
              </form>

              <div className="mt-6 flex justify-start">
                <button
                  onClick={() => setCurrentStep(currentStep - 1)}
                  className="text-muted-foreground hover:text-foreground transition-colors font-medium text-sm"
                >
                  ‚Üê –ü—Ä–æ–º–µ–Ω–∏ –æ—Ç–≥–æ–≤–æ—Ä
                </button>
              </div>
            </GlassCard>
          )}

          {/* Trust Indicators */}
          <div className="mt-8 flex flex-wrap justify-center gap-6 text-sm text-muted-foreground">
            <div className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>2 –º–∏–Ω—É—Ç–∏ —Ç–µ—Å—Ç</span>
            </div>
            <div className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏</span>
            </div>
            <div className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>–ë–µ–∑ —Å–ø–∞–º</span>
            </div>
          </div>

        </div>
      </div>
    </section>
  );
}
