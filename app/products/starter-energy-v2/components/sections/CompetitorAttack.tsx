import React from 'react';
import { Check, X, AlertTriangle, TrendingDown, DollarSign, Shield } from 'lucide-react';
import AnimatedBackground from '../shared/AnimatedBackground';
import GradientText from '../shared/GradientText';
import GlassCard from '../shared/GlassCard';

export default function CompetitorAttack() {
  const features = [
    { label: '–î–æ–±–∞–≤–∫–∞ (12 —Å—ä—Å—Ç–∞–≤–∫–∏)', icon: 'üíä' },
    { label: '–¢—Ä–µ–Ω–∏—Ä–æ–≤—ä—á–Ω–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏', icon: 'üí™' },
    { label: '–•—Ä–∞–Ω–∏—Ç–µ–ª–Ω–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏', icon: 'üçñ' },
    { label: '–°—ä–Ω & Recovery', icon: 'üò¥' },
    { label: '–ü—Ä–æ—Å–ª–µ–¥—è–≤–∞–Ω–µ –ø—Ä–æ–≥—Ä–µ—Å', icon: 'üìä' },
    { label: 'Telegram –æ–±—â–Ω–æ—Å—Ç', icon: 'üí¨' },
    { label: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è', icon: 'üéØ' },
    { label: '–ù–∞—É—á–Ω–æ –±–∞–∑–∏—Ä–∞–Ω–æ', icon: 'üî¨' }
  ];

  const competitors = [
    {
      name: 'iHerb / Amazon\n–î–æ–±–∞–≤–∫–∏',
      logo: 'üõí',
      price: '80-150 –ª–≤/–º',
      color: 'from-gray-500 to-gray-600',
      problems: [
        '–°–∞–º–æ —Ö–∞–ø—á–µ—Ç–∞ (20% –æ—Ç —Ñ–æ—Ä–º—É–ª–∞—Ç–∞)',
        '–°–∞–º —Ç—Ä—è–±–≤–∞ –¥–∞ —Ä–∞–∑–±–µ—Ä–µ—à –¥–æ–∑–∏—Ä–æ–≤–∫–∏',
        '–ù—è–º–∞ –ø–ª–∞–Ω –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
        '–ù—è–º–∞ —Ö—Ä–∞–Ω–∞ / —Å—ä–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª–∏',
        'Generic advice –æ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç'
      ],
      result: '–•–∞—Ä—á–∏—à –ø–∞—Ä–∏. –ì–∞–¥–∞–µ—à. –ù—è–º–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏.',
      checks: [true, false, false, false, false, false, false, false]
    },
    {
      name: '–û–Ω–ª–∞–π–Ω/–§–∏—Ç–Ω–µ—Å\n–¢—Ä–µ–Ω—å–æ—Ä',
      logo: 'üèÉ',
      price: '200-400 –ª–≤/–º',
      color: 'from-blue-500 to-blue-600',
      problems: [
        '–°–∫—ä–ø–æ (200+ –ª–≤/–º–µ—Å–µ—Ü)',
        'Generic –ø—Ä–æ–≥—Ä–∞–º–∞ (copy-paste)',
        '–ù–µ —Å–µ –∑–∞–Ω–∏–º–∞–≤–∞ —Å –¥–æ–±–∞–≤–∫–∏',
        '–ù–µ –ø—Ä–æ—Å–ª–µ–¥—è–≤–∞ —Ö–æ—Ä–º–æ–Ω–∏',
        '–ß–µ—Å—Ç–æ –Ω—è–º–∞ real expertise'
      ],
      result: '–ü–ª–∞—â–∞—à –º–Ω–æ–≥–æ. –ü–æ–ª—É—á–∞–≤–∞—à –º–∞–ª–∫–æ.',
      checks: [false, true, true, false, true, false, false, false]
    },
    {
      name: '–ë—ä–ª–≥–∞—Ä—Å–∫–∏ "–ß—É–¥–æ"\n–ë—Ä–∞–Ω–¥–æ–≤–µ',
      logo: 'üíä',
      price: '120-200 –ª–≤',
      color: 'from-red-500 to-orange-500',
      problems: [
        '–û–±–µ—â–∞–≤–∞—Ç —á—É–¥–µ—Å–∞ (–ª—ä–∂–∞—Ç)',
        '–°—ä—Å—Ç–∞–≤–∫–∏ –ø–æ–¥ 50% –æ—Ç declared',
        '–ù—è–º–∞ –Ω–∞—É—á–Ω–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—Å—Ç–≤–∞',
        '–ê–≥—Ä–µ—Å–∏–≤–µ–Ω –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –Ω—É–ª–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏',
        '–ù–µ –≤—Ä—ä—â–∞—Ç –ø–∞—Ä–∏'
      ],
      result: '–ò–∑–º–∞–º–∞. –•–≤—ä—Ä–ª–µ–Ω–∏ –ø–∞—Ä–∏. –ó–∞–≥—É–±–µ–Ω–æ –≤—Ä–µ–º–µ.',
      checks: [false, false, false, false, false, false, false, false]
    },
    {
      name: '–°—Ç–µ—Ä–æ–∏–¥–∏\n(Black Market)',
      logo: 'üíâ',
      price: '300-800 –ª–≤/—Ü–∏–∫—ä–ª',
      color: 'from-purple-500 to-pink-500',
      problems: [
        '–ó–¥—Ä–∞–≤–æ—Å–ª–æ–≤–Ω–∏ —Ä–∏—Å–∫–æ–≤–µ (—Å–µ—Ä–∏–æ–∑–Ω–∏)',
        '–•–æ—Ä–º–æ–Ω–∞–ª–µ–Ω crash —Å–ª–µ–¥ —Ü–∏–∫—ä–ª',
        '–¢—Ä—è–±–≤–∞ PCT (Post-Cycle Therapy)',
        '–°—Ç—Ä–∞–Ω–∏—á–Ω–∏ –µ—Ñ–µ–∫—Ç–∏ (–∞–∫–Ω–µ, –≥–∏–Ω–µ–∫–æ)',
        'Illegal –≤ –ë—ä–ª–≥–∞—Ä–∏—è'
      ],
      result: '–†–µ–∑—É–ª—Ç–∞—Ç–∏? –î–ê. –ù–æ –Ω–∞ –∫–∞–∫–≤–∞ —Ü–µ–Ω–∞?',
      checks: [false, true, false, false, false, false, false, false]
    },
    {
      name: 'TESTOGRAPH\n–°–∏—Å—Ç–µ–º–∞',
      logo: 'üéØ',
      price: '67-179 –ª–≤',
      color: 'from-green-500 to-blue-500',
      isWinner: true,
      problems: null,
      result: '100% –ü–™–õ–ù–ê –°–ò–°–¢–ï–ú–ê. –í—Å–∏—á–∫–æ –Ω–∞ –µ–¥–Ω–æ –º—è—Å—Ç–æ.',
      checks: [true, true, true, true, true, true, true, true]
    }
  ];

  return (
    <section className="relative py-20 md:py-32 overflow-hidden bg-gradient-to-br from-background to-neutral-50 dark:to-neutral-900">
      <AnimatedBackground variant="circles" opacity={0.06} />

      <div className="container mx-auto px-4 relative z-10">
        <div className="max-w-7xl mx-auto space-y-12">

          {/* Header */}
          <div className="text-center space-y-4">
            <div className="inline-flex items-center gap-2 bg-red-500/10 backdrop-blur-sm border border-red-500/20 rounded-full px-4 py-2 mb-4">
              <AlertTriangle className="w-4 h-4 text-red-600 dark:text-red-400" />
              <span className="text-sm font-semibold text-red-600 dark:text-red-400">Brutal –ß–µ—Å—Ç–Ω–æ—Å—Ç</span>
            </div>

            <h2 className="text-3xl md:text-4xl lg:text-5xl font-bold">
              <GradientText from="from-red-500" via="via-orange-500" to="to-amber-500">
                –í–ï–†–û–Ø–¢–ù–û –°–ò –ü–†–û–ë–í–ê–õ –í–°–ò–ß–ö–û –û–¢ –¢–û–í–ê
              </GradientText>
            </h2>

            <p className="text-xl md:text-2xl text-foreground font-semibold max-w-3xl mx-auto">
              –ï—Ç–æ –∑–∞—â–æ –Ω–µ —Ä–∞–±–æ—Ç–∏. –ò –∑–∞—â–æ TESTOGRAPH –µ —Ä–∞–∑–ª–∏—á–µ–Ω.
            </p>
          </div>

          {/* Comparison Table - Mobile Optimized */}
          <div className="space-y-6 lg:hidden">
            {competitors.map((comp, idx) => (
              <GlassCard
                key={idx}
                className={`p-6 ${comp.isWinner ? 'border-2 border-green-500 shadow-xl' : 'border-red-500/20'}`}
              >
                {comp.isWinner && (
                  <div className="absolute -top-3 -right-3 bg-gradient-to-r from-green-500 to-blue-500 text-white px-4 py-1 rounded-full text-sm font-bold shadow-lg">
                    –ü–û–ë–ï–î–ò–¢–ï–õ
                  </div>
                )}

                <div className="text-center mb-4">
                  <div className="text-5xl mb-2">{comp.logo}</div>
                  <h3 className="text-lg font-bold text-foreground whitespace-pre-line">{comp.name}</h3>
                  <p className={`text-sm font-semibold mt-1 ${comp.isWinner ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>
                    {comp.price}
                  </p>
                </div>

                {comp.problems && (
                  <div className="mb-4 bg-red-500/5 border border-red-500/20 rounded-lg p-4">
                    <p className="text-sm font-bold text-red-600 dark:text-red-400 mb-2">–ü–†–û–ë–õ–ï–ú–ò:</p>
                    <div className="space-y-1">
                      {comp.problems.map((problem, i) => (
                        <p key={i} className="text-xs text-muted-foreground flex items-start gap-2">
                          <X className="w-3 h-3 text-red-500 flex-shrink-0 mt-0.5" />
                          <span>{problem}</span>
                        </p>
                      ))}
                    </div>
                  </div>
                )}

                <div className={`p-3 rounded-lg text-center ${comp.isWinner ? 'bg-green-500/10' : 'bg-red-500/10'}`}>
                  <p className={`text-sm font-bold ${comp.isWinner ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>
                    {comp.result}
                  </p>
                </div>
              </GlassCard>
            ))}
          </div>

          {/* Comparison Table - Desktop */}
          <div className="hidden lg:block overflow-x-auto">
            <GlassCard className="p-0">
              <table className="w-full">
                <thead>
                  <tr className="border-b border-border/50">
                    <th className="p-4 text-left">
                      <p className="text-sm font-semibold text-muted-foreground">–ö–∞–∫–≤–æ –ø–æ–ª—É—á–∞–≤–∞—à?</p>
                    </th>
                    {competitors.map((comp, idx) => (
                      <th key={idx} className="p-4 text-center min-w-[160px]">
                        <div className={`${comp.isWinner ? 'relative' : ''}`}>
                          {comp.isWinner && (
                            <div className="absolute -top-2 left-1/2 -translate-x-1/2 -translate-y-full bg-gradient-to-r from-green-500 to-blue-500 text-white px-3 py-1 rounded-full text-xs font-bold shadow-lg whitespace-nowrap">
                              ‚úì –ü–û–ë–ï–î–ò–¢–ï–õ
                            </div>
                          )}
                          <div className="text-4xl mb-2">{comp.logo}</div>
                          <p className="text-sm font-bold text-foreground whitespace-pre-line leading-tight mb-1">
                            {comp.name}
                          </p>
                          <p className={`text-xs font-semibold ${comp.isWinner ? 'text-green-600 dark:text-green-400' : 'text-muted-foreground'}`}>
                            {comp.price}
                          </p>
                        </div>
                      </th>
                    ))}
                  </tr>
                </thead>
                <tbody>
                  {features.map((feature, idx) => (
                    <tr key={idx} className="border-b border-border/30 hover:bg-muted/5">
                      <td className="p-4">
                        <div className="flex items-center gap-2">
                          <span className="text-2xl">{feature.icon}</span>
                          <span className="text-sm font-medium text-foreground">{feature.label}</span>
                        </div>
                      </td>
                      {competitors.map((comp, compIdx) => (
                        <td key={compIdx} className="p-4 text-center">
                          {comp.checks[idx] ? (
                            <Check className="w-6 h-6 text-green-500 mx-auto" />
                          ) : (
                            <X className="w-6 h-6 text-red-500 mx-auto opacity-40" />
                          )}
                        </td>
                      ))}
                    </tr>
                  ))}
                </tbody>
              </table>
            </GlassCard>
          </div>

          {/* Competitor-Specific Callouts */}
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {competitors.slice(0, 4).map((comp, idx) => (
              <GlassCard key={idx} className="p-6 border-red-500/20">
                <div className="text-center mb-4">
                  <div className="text-4xl mb-2">{comp.logo}</div>
                  <h4 className="font-bold text-foreground text-sm whitespace-pre-line">{comp.name}</h4>
                </div>

                {comp.problems && (
                  <div className="space-y-2 mb-4">
                    {comp.problems.map((problem, i) => (
                      <div key={i} className="flex items-start gap-2">
                        <X className="w-4 h-4 text-red-500 flex-shrink-0 mt-0.5" />
                        <p className="text-xs text-muted-foreground">{problem}</p>
                      </div>
                    ))}
                  </div>
                )}

                <div className="bg-red-500/10 border border-red-500/20 rounded-lg p-3 text-center">
                  <p className="text-xs font-bold text-red-600 dark:text-red-400">
                    {comp.result}
                  </p>
                </div>
              </GlassCard>
            ))}
          </div>

          {/* Why TESTOGRAPH Wins */}
          <div className="max-w-4xl mx-auto">
            <GlassCard className="p-8 md:p-12 border-2 border-green-500/30 shadow-2xl">
              <div className="text-center mb-8">
                <div className="w-20 h-20 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-4 text-4xl">
                  üéØ
                </div>
                <h3 className="text-2xl md:text-3xl font-bold mb-3">
                  <GradientText>–ó–ê–©–û TESTOGRAPH –ü–ï–ß–ï–õ–ò?</GradientText>
                </h3>
              </div>

              <div className="grid md:grid-cols-2 gap-6 mb-8">
                {[
                  {
                    icon: Shield,
                    title: '–ü–™–õ–ù–ê –°–ò–°–¢–ï–ú–ê',
                    desc: '–ù–µ —Å–∞–º–æ —Ö–∞–ø—á–µ—Ç–∞. –¶—è–ª–∞—Ç–∞ —Ñ–æ—Ä–º—É–ª–∞ (100%). –î–æ–±–∞–≤–∫–∞ + –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ + –•—Ä–∞–Ω–∞ + –°—ä–Ω + Tracking.',
                    color: 'text-green-500'
                  },
                  {
                    icon: DollarSign,
                    title: '–ß–ï–°–¢–ù–ê –¶–ï–ù–ê',
                    desc: '67-179 –ª–≤ –∑–∞ –í–°–ò–ß–ö–û. –î—Ä—É–≥–∏—Ç–µ –∏—Å–∫–∞—Ç 200+ –ª–≤ —Å–∞–º–æ –∑–∞ –µ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç. –ù–∏–µ –¥–∞–≤–∞–º–µ —Ü—è–ª–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞.',
                    color: 'text-blue-500'
                  },
                  {
                    icon: TrendingUp,
                    title: '–î–û–ö–ê–ó–ê–ù–ò –†–ï–ó–£–õ–¢–ê–¢–ò',
                    desc: '127 –º—ä–∂–µ. 94% —É—Å–ø–µ—Ö rate. –†–µ–∞–ª–Ω–∏ testimonials. –ù–µ –æ–±–µ—â–∞–Ω–∏—è - —Ñ–∞–∫—Ç–∏.',
                    color: 'text-purple-500'
                  },
                  {
                    icon: Check,
                    title: '–ù–£–õ–ï–í –†–ò–°–ö',
                    desc: '30 –¥–Ω–∏ –≥–∞—Ä–∞–Ω—Ü–∏—è. –ù–µ —Ä–∞–±–æ—Ç–∏? –ü–∞—Ä–∏ –Ω–∞–∑–∞–¥. –ù—è–º–∞ fine print. –ù—è–º–∞ bullshit.',
                    color: 'text-amber-500'
                  }
                ].map((point, idx) => {
                  const Icon = point.icon;
                  return (
                    <div key={idx} className="flex items-start gap-4">
                      <div className={`w-12 h-12 rounded-xl bg-primary/10 flex items-center justify-center flex-shrink-0`}>
                        <Icon className={`w-6 h-6 ${point.color}`} />
                      </div>
                      <div>
                        <h4 className="font-bold text-foreground mb-1">{point.title}</h4>
                        <p className="text-sm text-muted-foreground">{point.desc}</p>
                      </div>
                    </div>
                  );
                })}
              </div>

              <div className="bg-gradient-to-r from-green-500/10 to-blue-500/10 border-2 border-green-500/20 rounded-2xl p-6 text-center">
                <p className="text-xl md:text-2xl font-bold text-foreground mb-2">
                  –î–†–£–ì–ò–¢–ï –ø—Ä–æ–¥–∞–≤–∞—Ç –ß–ê–°–¢–ò.
                </p>
                <p className="text-2xl md:text-3xl font-bold">
                  <GradientText>–ù–ò–ï –¥–∞–≤–∞–º–µ –¶–Ø–õ–ê–¢–ê –°–ò–°–¢–ï–ú–ê.</GradientText>
                </p>
              </div>
            </GlassCard>
          </div>

          {/* Final Truth */}
          <div className="max-w-3xl mx-auto text-center">
            <div className="bg-neutral-900 dark:bg-neutral-800 border-2 border-amber-500 rounded-2xl p-8">
              <p className="text-2xl md:text-3xl font-bold text-white mb-4">
                –ò—Å—Ç–∏–Ω–∞—Ç–∞?
              </p>
              <p className="text-lg text-neutral-300 mb-4">
                –ú–æ–∂–µ—à –¥–∞ —Ö–∞—Ä—á–∏—à 500+ –ª–≤ –∑–∞ —á–∞—Å—Ç–∏ –æ—Ç —Ä–∞–∑–ª–∏—á–Ω–∏ –º–µ—Å—Ç–∞.
                <br />
                –ú–æ–∂–µ—à –¥–∞ –≥–∞–¥–∞–µ—à –∫–∞–∫ –¥–∞ –≥–∏ –∫–æ–º–±–∏–Ω–∏—Ä–∞—à.
                <br />
                –ú–æ–∂–µ—à –¥–∞ —á–∞–∫–∞—à 6-12 –º–µ—Å–µ—Ü–∞ –∑–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ (–º–æ–∂–µ –±–∏).
              </p>
              <div className="h-1 bg-amber-500 w-24 mx-auto my-6" />
              <p className="text-xl md:text-2xl font-bold text-amber-400 mb-2">
                –ò–õ–ò
              </p>
              <p className="text-xl md:text-2xl font-bold">
                <GradientText from="from-green-500" via="via-blue-500" to="to-purple-500">
                  –í–∑–µ–º–∞—à TESTOGRAPH. –°–ª–µ–¥–≤–∞—à —Å–∏—Å—Ç–µ–º–∞—Ç–∞. –í–∏–∂–¥–∞—à —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –∑–∞ 30 –¥–Ω–∏.
                </GradientText>
              </p>
            </div>
          </div>

        </div>
      </div>
    </section>
  );
}
