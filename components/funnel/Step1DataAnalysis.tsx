import { useEffect, useState } from "react";

export const Step1DataAnalysis = () => {
  const [visibleSteps, setVisibleSteps] = useState<number>(0);
  const [percentage, setPercentage] = useState<number>(0);

  useEffect(() => {
    const timers = [
      setTimeout(() => setVisibleSteps(1), 1000),
      setTimeout(() => setVisibleSteps(2), 2000),
      setTimeout(() => setVisibleSteps(3), 4000),
    ];

    return () => timers.forEach(clearTimeout);
  }, []);

  useEffect(() => {
    const interval = setInterval(() => {
      setPercentage((prev) => {
        if (prev >= 25) {
          clearInterval(interval);
          return 25;
        }
        return prev + 1;
      });
    }, 800);

    return () => clearInterval(interval);
  }, []);

  const steps = [
    "‚úì –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –≤—ä–∑—Ä–∞—Å—Ç –∏ —Ç–µ–≥–ª–æ...",
    "‚úì –ê–Ω–∞–ª–∏–∑ –Ω–∞ —Å–∏–º–ø—Ç–æ–º–∏—Ç–µ...",
    "‚úì –ö–∞–ª–∫—É–ª–∏—Ä–∞–Ω–µ –Ω–∞ —Ä–∏—Å–∫–æ–≤–∏ —Ñ–∞–∫—Ç–æ—Ä–∏..."
  ];

  return (
    <div className="min-h-[80vh] flex items-center justify-center px-4 py-12">
      <div className="max-w-2xl w-full text-center space-y-8">
        <div className="relative">
          <div className="w-32 h-32 mx-auto rounded-full border-8 border-primary/20 flex items-center justify-center">
            <div className="text-5xl font-bold text-primary">
              {percentage}%
            </div>
          </div>
          <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
            <div 
              className="w-32 h-32 rounded-full border-8 border-primary border-t-transparent animate-spin"
              style={{ animationDuration: '2s' }}
            />
          </div>
        </div>
        
        <h1 className="text-3xl md:text-4xl font-bold text-foreground">
          üî¨ –ê–ù–ê–õ–ò–ó–ò–†–ê–ú–ï –í–ê–®–ò–Ø –•–û–†–ú–û–ù–ê–õ–ï–ù –ü–†–û–§–ò–õ
        </h1>

        <div className="space-y-4 text-left max-w-md mx-auto">
          {steps.map((step, index) => (
            <div
              key={index}
              className={cn(
                "text-lg text-muted-foreground transition-all duration-500",
                visibleSteps > index ? "opacity-100 translate-y-0" : "opacity-0 translate-y-2"
              )}
            >
              {step}
            </div>
          ))}
        </div>

        <div className="pt-8 space-y-4 text-muted-foreground">
          <h2 className="text-xl font-semibold text-foreground">–ó–ù–ê–ï–•–¢–ï –õ–ò:</h2>
          <ul className="space-y-2 text-left max-w-lg mx-auto">
            <li>‚Ä¢ 42% –æ—Ç –±—ä–ª–≥–∞—Ä—Å–∫–∏—Ç–µ –º—ä–∂–µ –Ω–∞–¥ 30 –∏–º–∞—Ç –∫–ª–∏–Ω–∏—á–Ω–æ –Ω–∏—Å–∫–∏ –Ω–∏–≤–∞ –Ω–∞ —Ç–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω</li>
            <li>‚Ä¢ –°—Ä–µ–¥–Ω–∏—Ç–µ –Ω–∏–≤–∞ —Å–∞ —Å–ø–∞–¥–Ω–∞–ª–∏ —Å 22% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 20 –≥–æ–¥–∏–Ω–∏</li>
            <li>‚Ä¢ –ü–æ–≤–µ—á–µ—Ç–æ –º—ä–∂–µ –≥—É–±—è—Ç 1-2% —Ç–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω –≥–æ–¥–∏—à–Ω–æ —Å–ª–µ–¥ 30-—Ç–∞ –≥–æ–¥–∏–Ω–∞</li>
          </ul>
          <p className="pt-4 italic">–í–∞—à–∏—è—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω –¥–æ–∫–ª–∞–¥ —Å–µ –∑–∞—Ä–µ–∂–¥–∞...</p>
        </div>
      </div>
    </div>
  );
};

const cn = (...classes: (string | boolean | undefined)[]) => classes.filter(Boolean).join(' ');
