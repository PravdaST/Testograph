import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { CheckCircle, Clock } from "lucide-react";
import Image from "next/image";
import { ProtocolDashboardMockup } from "./ProtocolDashboardMockup";

interface UserData {
  firstName?: string;
  age?: string;
  weight?: string;
  height?: string;
  libido?: string;
  morningEnergy?: string;
  mood?: string;
}

interface Step4TheOfferProps {
  onDecline: () => void;
  userData?: UserData;
}

export const Step4TheOffer = ({ onDecline, userData }: Step4TheOfferProps) => {
  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes in seconds
  const [showStickyButton, setShowStickyButton] = useState(false);

  // Countdown timer
  useEffect(() => {
    const timer = setInterval(() => {
      setTimeLeft((prev) => {
        if (prev <= 1) {
          clearInterval(timer);
          window.location.href = "/";
          return 0;
        }
        return prev - 1;
      });
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  // Sticky button on scroll (mobile only)
  useEffect(() => {
    const handleScroll = () => {
      const scrolled = window.scrollY > 600;
      setShowStickyButton(scrolled);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const features = [
    {
      title: "30-–¥–Ω–µ–≤–µ–Ω –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–µ–Ω web –ø—Ä–æ—Ç–æ–∫–æ–ª",
      description: "–î–µ–Ω-–ø–æ-–¥–µ–Ω –ø–ª–∞–Ω –∑–∞ —Ö—Ä–∞–Ω–µ–Ω–µ, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –¥–æ–±–∞–≤–∫–∏. –ü–µ—Ä—Å–æ–Ω–∞–ª–µ–Ω tracker –∑–∞ –ø—Ä–æ—Å–ª–µ–¥—è–≤–∞–Ω–µ –Ω–∞ –Ω–∞–ø—Ä–µ–¥—ä–∫–∞",
      value: "197 –ª–≤"
    },
    {
      title: "TestoUP Premium –¥–æ–±–∞–≤–∫–∞ (30 –¥–Ω–∏)",
      description: "40% –ü—Ä–æ—Ç–æ–¥–∏–æ—Å—Ü–∏–Ω –¢—Ä–∏–±—É–ª—É—Å - 5x –ø–æ-–º–æ—â–µ–Ω –æ—Ç –ø–∞–∑–∞—Ä–∞. –ê–¥–∞–ø—Ç–æ–≥–µ–Ω–∏ + –≤–∏—Ç–∞–º–∏–Ω–∏ –∑–∞ —Ö–æ—Ä–º–æ–Ω–∞–ª–µ–Ω –±–∞–ª–∞–Ω—Å",
      value: "67 –ª–≤"
    },
    {
      title: "AI –¢–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω–æ–≤ –ï–∫—Å–ø–µ—Ä—Ç (–ù–û–í!)",
      description: "–ü–µ—Ä—Å–æ–Ω–∞–ª–µ–Ω –∞—Å–∏—Å—Ç–µ–Ω—Ç 24/7 –∑–∞ –∞–¥–∞–ø—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞. –û—Ç–≥–æ–≤–∞—Ä—è –Ω–∞ –≤—Å–∏—á–∫–∏ –≤—ä–ø—Ä–æ—Å–∏ –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, —Ö—Ä–∞–Ω–∞, –¥–æ–±–∞–≤–∫–∏",
      value: "99 –ª–≤"
    },
    {
      title: "Meal Planner + Food Tracker App (–ù–û–í!)",
      description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–ª–∞–Ω–∏—Ä–∞–Ω–µ –Ω–∞ —Ö—Ä–∞–Ω–∏ —Å–ø–æ—Ä–µ–¥ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞. –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ —Ä–µ—Ü–µ–ø—Ç–∏ —Å –±—ä–ª–≥–∞—Ä—Å–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏",
      value: "79 –ª–≤"
    },
    {
      title: "Telegram VIP –æ–±—â–Ω–æ—Å—Ç",
      description: "–ï–∂–µ–¥–Ω–µ–≤–Ω–∏ —Å—ä–≤–µ—Ç–∏ –æ—Ç –µ–∫—Å–ø–µ—Ä—Ç–∏. –î–∏—Ä–µ–∫—Ç–Ω–∞ –ø–æ–¥–∫—Ä–µ–ø–∞ + –º–æ—Ç–∏–≤–∞—Ü–∏—è",
      value: "–ë–µ–∑—Ü–µ–Ω–Ω–æ"
    }
  ];

  const guarantees = [
    "30-–¥–Ω–µ–≤–Ω–∞ –≥–∞—Ä–∞–Ω—Ü–∏—è –∑–∞ –≤—Ä—ä—â–∞–Ω–µ –Ω–∞ –ø–∞—Ä–∏",
    "–ù–∞–¥ 3,247 –¥–æ–≤–æ–ª–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∏ –≤ –ë—ä–ª–≥–∞—Ä–∏—è",
    "–ù–∞—É—á–Ω–æ –±–∞–∑–∏—Ä–∞–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª (–Ω–µ –º–∞–≥–∏—è)",
    "100% –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–∏ —Å—ä—Å—Ç–∞–≤–∫–∏"
  ];

  const CTAButton = ({ variant = "default" }: { variant?: "default" | "compact" }) => (
    <Button
      size={variant === "compact" ? "default" : "lg"}
      className={`w-full ${variant === "compact" ? "text-base py-5" : "text-xl py-6"} bg-primary hover:bg-primary/90 text-primary-foreground font-bold shadow-xl hover:shadow-2xl transition-all`}
      asChild
    >
      <a href="https://www.shop.testograph.eu" target="_blank" rel="noopener noreferrer">
        üöÄ –ü–û–†–™–ß–ê–ô –°–ï–ì–ê - 97 –õ–í
      </a>
    </Button>
  );

  return (
    <div className="min-h-[80vh] px-4 py-12">
      <div className="max-w-5xl mx-auto space-y-8">
        {/* Timer Section */}
        <div className="bg-orange-100 dark:bg-orange-950/30 border-2 border-orange-500 rounded-lg p-4 flex items-center justify-center gap-3">
          <Clock className="w-6 h-6 text-orange-600 animate-pulse" />
          <div className="text-center">
            <p className="text-sm font-medium text-orange-900 dark:text-orange-200">
              ‚è∞ –û–§–ï–†–¢–ê–¢–ê –ò–ó–¢–ò–ß–ê –°–õ–ï–î:
            </p>
            <p className="text-3xl font-bold text-orange-600">
              {formatTime(timeLeft)}
            </p>
          </div>
        </div>

        {/* Header */}
        <div className="text-center space-y-3">
          <div className="inline-block bg-primary/10 px-4 py-2 rounded-full">
            <span className="text-primary font-bold">‚ö° –ï–ö–°–ö–õ–£–ó–ò–í–ù–ê –û–§–ï–†–¢–ê</span>
          </div>
          <p className="text-sm text-muted-foreground">
            (–í–∞–ª–∏–¥–Ω–∞ —Å–∞–º–æ –¥–æ–∫–∞—Ç–æ —Å–µ –∑–∞—Ä–µ–∂–¥–∞ –¥–æ–∫–ª–∞–¥—ä—Ç)
          </p>
          <h1 className="text-3xl md:text-4xl font-bold text-foreground">
            üéØ –ü–™–õ–ù–ê–¢–ê TESTOGRAPH PRO –°–ò–°–¢–ï–ú–ê
          </h1>
          <p className="text-lg text-muted-foreground">
            –í–∞—à–∏—è—Ç –±–µ–∑–ø–ª–∞—Ç–µ–Ω –¥–æ–∫–ª–∞–¥ –í–∏ –ø–æ–∫–∞–∑–≤–∞ –ö–™–î–ï —Å—Ç–µ. –ù–æ –∫–∞–∫ –¥–∞ —Å—Ç–∏–≥–Ω–µ—Ç–µ –î–û –í–™–†–•–ê?
          </p>
        </div>

        {/* CTA #1 - Top */}
        <CTAButton />

        {/* Product Images */}
        <div className="grid md:grid-cols-2 gap-6">
          <div className="bg-gradient-to-br from-purple-100 to-violet-100 dark:from-purple-900/20 dark:to-violet-900/20 rounded-lg p-8 flex items-center justify-center min-h-[300px]">
            <div className="relative w-full h-full flex items-center justify-center">
              <Image
                src="/funnel/testoup-bottle.webp"
                alt="TestoUP Premium –¥–æ–±–∞–≤–∫–∞"
                width={250}
                height={350}
                className="object-contain drop-shadow-2xl"
              />
            </div>
          </div>

          <div className="rounded-lg overflow-hidden min-h-[300px]">
            <ProtocolDashboardMockup />
          </div>
        </div>

        {/* CTA #2 - Middle */}
        <CTAButton variant="compact" />

        {/* Features List */}
        <div className="bg-card border border-border rounded-lg p-6 space-y-4">
          <h2 className="text-xl font-bold text-center text-foreground mb-4">
            –¢–æ–≤–∞ –∫–æ–µ—Ç–æ –ø–æ–ª—É—á–∞–≤–∞—Ç–µ –î–ù–ï–°:
          </h2>
          {features.map((feature, index) => (
            <div key={index} className="flex items-start gap-3 pb-3 border-b border-border last:border-0">
              <CheckCircle className="w-5 h-5 text-primary flex-shrink-0 mt-1" />
              <div className="flex-1">
                <h3 className="font-semibold text-foreground">{feature.title}</h3>
                <p className="text-sm text-muted-foreground">{feature.description}</p>
              </div>
              <span className="text-sm font-semibold text-muted-foreground whitespace-nowrap">
                ({feature.value})
              </span>
            </div>
          ))}
        </div>

        {/* Pricing */}
        <div className="bg-gradient-card backdrop-blur-md rounded-lg p-8 space-y-4 border-2 border-primary">
          <div className="flex items-center justify-between text-xl">
            <span className="text-muted-foreground">–û–ë–©–ê –°–¢–û–ô–ù–û–°–¢:</span>
            <span className="font-bold line-through text-muted-foreground">442 –ª–≤</span>
          </div>
          <div className="flex items-center justify-between text-3xl">
            <span className="font-bold text-foreground">–î–ù–ï–° –ü–õ–ê–¢–ï–¢–ï:</span>
            <span className="font-bold text-primary">97 –ª–≤</span>
          </div>
          <div className="flex items-center justify-between text-lg">
            <span className="text-muted-foreground">–°–ü–ï–°–¢–Ø–í–ê–¢–ï:</span>
            <span className="font-bold text-green-600">345 –ª–≤ (78% –æ—Ç—Å—Ç—ä–ø–∫–∞)</span>
          </div>
          <p className="text-center text-sm text-muted-foreground pt-2">
            –ü–æ-–º–∞–ª–∫–æ –æ—Ç 2 –∫–∞—Ñ–µ—Ç–∞ –¥–Ω–µ–≤–Ω–æ –∑–∞ –ø—ä–ª–Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è.
          </p>
        </div>

        {/* CTA #3 - Bottom */}
        <div className="space-y-4">
          <CTAButton />

          {/* Money-Back Guarantee Badge */}
          <div className="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-950/20 dark:to-emerald-950/20 rounded-lg p-6 border-2 border-green-500 text-center space-y-2">
            <div className="w-16 h-16 mx-auto rounded-full bg-green-500 flex items-center justify-center text-3xl mb-2">
              ‚úì
            </div>
            <h3 className="text-xl font-bold text-foreground">30-–î–ù–ï–í–ù–ê –ì–ê–†–ê–ù–¶–ò–Ø</h3>
            <p className="text-muted-foreground">
              –ù–µ —Å—Ç–µ –¥–æ–≤–æ–ª–Ω–∏? –í—Ä—ä—â–∞–º–µ –≤–∏ –ø–∞—Ä–∏—Ç–µ. –ë–µ–∑ –≤—ä–ø—Ä–æ—Å–∏.
            </p>
            <p className="text-sm font-semibold text-green-700 dark:text-green-400">
              100% Risk-Free
            </p>
          </div>

          {/* Guarantees */}
          <div className="bg-primary/5 rounded-lg p-6 space-y-3">
            <h3 className="text-lg font-bold text-center text-foreground">
              ‚úÖ –ó–ê–©–û –î–ê –ù–ò –í–Ø–†–í–ê–¢–ï:
            </h3>
            <div className="grid md:grid-cols-2 gap-2">
              {guarantees.map((guarantee, index) => (
                <div key={index} className="flex items-center gap-2 text-sm text-muted-foreground">
                  <CheckCircle className="w-4 h-4 text-primary flex-shrink-0" />
                  <span>{guarantee}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Payment Trust Badges */}
          <div className="flex flex-wrap items-center justify-center gap-4 pt-4">
            <div className="flex items-center gap-2 px-4 py-2 bg-card rounded-lg border">
              <svg className="w-8 h-5" viewBox="0 0 32 20" fill="none">
                <rect width="32" height="20" rx="2" fill="#1434CB"/>
                <path d="M13.8 14.5h4.4l2.8-9h-4.4l-2.8 9z" fill="#fff"/>
              </svg>
              <svg className="w-8 h-5" viewBox="0 0 32 20" fill="none">
                <rect width="32" height="20" rx="2" fill="#EB001B"/>
                <circle cx="12" cy="10" r="6" fill="#F79E1B" fillOpacity="0.7"/>
              </svg>
              <span className="text-xs font-medium">Visa/Mastercard</span>
            </div>
            <div className="px-4 py-2 bg-card rounded-lg border">
              <span className="text-xs font-medium">üîí SSL Secure</span>
            </div>
            <div className="px-4 py-2 bg-card rounded-lg border">
              <span className="text-xs font-medium">üáßüá¨ –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç –ë—ä–ª–≥–∞—Ä–∏—è</span>
            </div>
          </div>

          {/* Decline Button */}
          <div className="text-center pt-4">
            <button
              onClick={onDecline}
              className="text-sm text-muted-foreground hover:text-foreground underline transition-colors"
            >
              –ù–µ, –±–ª–∞–≥–æ–¥–∞—Ä—è
            </button>
          </div>
        </div>
      </div>

      {/* Sticky CTA Button (Mobile) */}
      {showStickyButton && (
        <div className="md:hidden fixed bottom-0 left-0 right-0 z-50 bg-gradient-to-r from-primary to-violet-600 p-4 shadow-2xl border-t-2 border-primary animate-in slide-in-from-bottom duration-300">
          <div className="flex items-center justify-between gap-3">
            <div className="flex-1">
              <p className="text-white text-xs font-medium">–ï–ö–°–ö–õ–£–ó–ò–í–ù–ê –û–§–ï–†–¢–ê</p>
              <p className="text-white text-lg font-bold">97 –õ–í</p>
            </div>
            <Button
              size="lg"
              className="bg-white text-primary hover:bg-white/90 font-bold shadow-lg"
              asChild
            >
              <a href="https://www.shop.testograph.eu" target="_blank" rel="noopener noreferrer">
                –ü–û–†–™–ß–ê–ô –°–ï–ì–ê
              </a>
            </Button>
          </div>
        </div>
      )}
    </div>
  );
};
