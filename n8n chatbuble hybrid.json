{
    "nodes": [
      {
        "parameters": {
          "promptType": "define",
          "text": "=Here is the user’s submitted data:\n\nGender: Мъжки\nAge: {{ $json.fields.Age }}\nHeight (cm): {{ $json.fields['Height (cm)'] }}\nWeight (kg): {{ $json.fields['Weight (kg)'] }}\nTraining Frequency: {{ $json.fields['Train Freq'] }} per week\nTraining Type: {{ $json.fields['Train Type'] }}\nSupplements usage: {{ $json.fields.Supplements }}\nAverage Sleep (h): {{ $json.fields['Average Sleep (h)'] }}\nType of Diet: {{ $json.fields.Diet }}\nAlcohol (drinks/week): {{ $json.fields['Alcohol (drinks/week)'] }}\nNicotine: {{ $json.fields.Nicotine }}\nLibido: {{ $json.fields.Libido }}\nMorning Erection: {{ $json.fields['Morning Erection'] }}\nMorning energy: {{ $json.fields['Morning energy'] }}\nPhysical Recovery: {{ $json.fields['Physical Recovery'] }}\nOverall Mood: {{ $json.fields.Mood }}\n\nAnalyze this data and provide the output in the following structure:\n\n1. **Title** – one line with the estimated testosterone level in nmol/L (exact number).  \n2. **Quick Summary** – 3 short paragraphs that explain why this number makes sense given their inputs.  \n3. **5 Tips** – a bulleted list of exactly five actionable recommendations to improve or support testosterone naturally.  \n4. End with the disclaimer: *“Това е само образователен инструмент и не е медицински тест.”*\n\n**Important:**  \n- All output must be in **Bulgarian language**.  \n",
          "hasOutputParser": true,
          "options": {
            "systemMessage": "=You are an AI health assistant designed to estimate probabilistic testosterone levels based on lifestyle and demographic inputs. \nThis is NOT a medical diagnosis. It is purely educational, based on research correlations between age, sleep, diet, training, stress factors, and symptoms.\n\n**Input you will receive:**\n- Gender\n- Age\n- Height (cm)\n- Weight (kg)\n- Training Frequency\n- Training Type\n- Supplements usage\n- Average Sleep (hours)\n- Type of Diet\n- Alcohol (drinks per week)\n- Nicotine use\n- Libido level\n- Morning erection\n- Morning energy\n- Physical recovery\n- Overall Mood\n\n**Your task:**\n1. Analyze the inputs and provide a **realistic exact number estimate** of the person’s testosterone level in nmol/L.  \n2. After the number, write a **quick summary** (2–3 short explanatory paragraphs) that connects their lifestyle factors with the estimate.  \n3. Finally, provide **exactly 5 essential, actionable tips** they should follow to support or improve testosterone naturally.  \n\n**Output format (strict):**\n\n- **Separate element** of the clean testosterone level value (Exact number) no other characters. Just a number\n- **Title**: one line with the estimated testosterone level in nmol/L (exact number).  \n- **Quick Summary**: 3 concise paragraphs.  \n- **5 Tips**: a bulleted list with exactly 5 items.  \n\n**Constraints:**\n- Never claim medical certainty or guarantee results.  \n- Do not mention supplements, drugs, or hormone therapy.  \n- Always end with: *“Това е само образователен инструмент и не е медицински тест.”*  \n\n**Important:**  \n- The entire output test (in nmol/L), title, summary, tips, disclaimer) must be written in **Bulgarian**.  \n- Provide the clean number of testosterone as a separate element\n"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 2.2,
        "position": [
          592,
          -480
        ],
        "id": "74372d33-176c-4786-ab95-471a7ca59479",
        "name": "AI Agent"
      },
      {
        "parameters": {
          "model": {
            "__rl": true,
            "value": "gpt-5-mini",
            "mode": "list",
            "cachedResultName": "gpt-5-mini"
          },
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "typeVersion": 1.2,
        "position": [
          592,
          -288
        ],
        "id": "68545d60-982d-4696-8ea1-d20f813826e7",
        "name": "OpenAI Chat Model",
        "credentials": {
          "openAiApi": {
            "id": "wlj8Wuw1eDFFLgZT",
            "name": "OpenAi account 2"
          }
        }
      },
      {
        "parameters": {
          "operation": "create",
          "base": {
            "__rl": true,
            "value": "appEKN2vcMqDryrJO",
            "mode": "list",
            "cachedResultName": "Lifestyle & Testosterone Questionnaire",
            "cachedResultUrl": "https://airtable.com/appEKN2vcMqDryrJO"
          },
          "table": {
            "__rl": true,
            "value": "tblW8lN0BAkcXB8Hn",
            "mode": "list",
            "cachedResultName": "Submissions",
            "cachedResultUrl": "https://airtable.com/appEKN2vcMqDryrJO/tblW8lN0BAkcXB8Hn"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "Email": "={{ $json.body.email }}",
              "Age": "={{ $json.body.age }}",
              "Height (cm)": "={{ $json.body.height }}",
              "Weight (kg)": "={{ $json.body.weight }}",
              "Train Freq": "={{ $json.body.trainingFrequency }}",
              "Train Type": "={{ $json.body.trainingType[0] }}, {{ $json.body.trainingType[1] }}, {{ $json.body.trainingType[2] }}",
              "Average Sleep (h)": "={{ $json.body.averageSleep }}",
              "Diet": "={{ $json.body.diet }}",
              "Alcohol (drinks/week)": "={{ $json.body.alcohol }}",
              "Nicotine": "={{ $json.body.nicotine }}",
              "Libido": "={{ $json.body.libido }}",
              "Morning energy": "={{ $json.body.morningEnergy }}",
              "Mood": "={{ $json.body.mood }}",
              "First Name": "={{ $json.body.firstName }}",
              "Last Name": "={{ $json.body.lastName }}",
              "Morning Erection": "={{ $json.body.morningErection }}",
              "Physical Recovery": "={{ $json.body.recovery }}",
              "Supplements": "={{ $json.body.supplements }}",
              "Gender": "male"
            },
            "matchingColumns": [],
            "schema": [
              {
                "id": "Email",
                "displayName": "Email",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "First Name",
                "displayName": "First Name",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Last Name",
                "displayName": "Last Name",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Gender",
                "displayName": "Gender",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "options",
                "options": [
                  {
                    "name": "male",
                    "value": "male"
                  },
                  {
                    "name": "female",
                    "value": "female"
                  },
                  {
                    "name": "other",
                    "value": "other"
                  }
                ],
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Age",
                "displayName": "Age",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "number",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Height (cm)",
                "displayName": "Height (cm)",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "number",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Weight (kg)",
                "displayName": "Weight (kg)",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "number",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Train Freq",
                "displayName": "Train Freq",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Train Type",
                "displayName": "Train Type",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Supplements",
                "displayName": "Supplements",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Average Sleep (h)",
                "displayName": "Average Sleep (h)",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "number",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Diet",
                "displayName": "Diet",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Alcohol (drinks/week)",
                "displayName": "Alcohol (drinks/week)",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "number",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Nicotine",
                "displayName": "Nicotine",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Libido",
                "displayName": "Libido",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Morning Erection",
                "displayName": "Morning Erection",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Morning energy",
                "displayName": "Morning energy",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Physical Recovery",
                "displayName": "Physical Recovery",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Mood",
                "displayName": "Mood",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Submitted At",
                "displayName": "Submitted At",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "dateTime",
                "readOnly": false,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.airtable",
        "typeVersion": 2.1,
        "position": [
          432,
          -480
        ],
        "id": "4feb2058-0d4b-41e8-9610-8c5a15c413d4",
        "name": "Create a record",
        "credentials": {
          "airtableTokenApi": {
            "id": "6Cs9xKeyRVdJGYkp",
            "name": "koko testo"
          }
        }
      },
      {
        "parameters": {
          "jsonSchemaExample": "{\n  \"test\": \"785\",\n  \"title\": \"Testosterone: ~44 nmol/L\",\n\n  \"paragraphs\": [\n    \"Your age places you near peak baseline. Sleep and diet are the main downward pressures here.\",\n    \"Strength training absence costs some natural support, but libido and energy suggest decent free T.\"\n  ],\n  \"tips\": [\n    \"Sleep 7–8h with a fixed wind-down.\",\n    \"Lift 3×/week: squat, hinge, push, pull.\",\n    \"Protein 1.6–2.0 g/kg; add eggs/fish/olive oil.\",\n    \"Two alcohol-free days in a row each week.\",\n    \"Plan a 4-week nicotine taper if relevant.\"\n  ],\n  \"disclaimer\": \"This is educational only and not a medical test.\"\n}"
        },
        "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
        "typeVersion": 1.3,
        "position": [
          736,
          -288
        ],
        "id": "4f5c2f7d-5f4f-4891-8c4e-6623eac126f2",
        "name": "Structured Output Parser"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.output.test.toNumber() }}",
                      "rightValue": 12,
                      "operator": {
                        "type": "number",
                        "operation": "lte"
                      },
                      "id": "2beb1cbd-98d4-44c2-8206-32d148c57b7d"
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "<12"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "9da2aa9c-5797-4a23-bbdf-d8086f89588f",
                      "leftValue": "={{ $json.output.test > 12 && $json.output.test < 26 }}",
                      "rightValue": true,
                      "operator": {
                        "type": "boolean",
                        "operation": "equals"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "351-749"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "f64bb956-2405-48c4-9a93-78f38fd0feb4",
                      "leftValue": "={{ $json.output.test.toNumber() }}",
                      "rightValue": 26,
                      "operator": {
                        "type": "number",
                        "operation": "gte"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "750>"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          912,
          -496
        ],
        "id": "3668cbdb-8bb2-4e1a-acff-ca50592fa3b3",
        "name": "Switch"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "c081deae-57db-424b-981b-e0ae98449cfd",
                "name": "Testosterone Level",
                "value": "Low Testosterone",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1264,
          -944
        ],
        "id": "c25b7caa-33ec-4ad3-acdf-ddf09e966369",
        "name": "Set T -> Low"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "c081deae-57db-424b-981b-e0ae98449cfd",
                "name": "Testosterone Level",
                "value": "Average Testosterone",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1248,
          -480
        ],
        "id": "4678ae7d-07d7-4a0c-8ded-bfefa0fb2bc3",
        "name": "Set T -> Average"
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "c081deae-57db-424b-981b-e0ae98449cfd",
                "name": "Testosterone Level",
                "value": "High Testosterone",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1264,
          -96
        ],
        "id": "b5d6b047-0479-4c99-b1b6-88ab7f6f6deb",
        "name": "Set T -> High"
      },
      {
        "parameters": {
          "jsonSchemaExample": "{\n  \"headline\": \"<h1>Прогнозен тестостерон: ~620 ng/dL посредствено ниво, можеш повече!</h1>\",\n  \"summary\": {\n    \"paragraph_1\": \"<p>Вашето ниво на тестостерон е в средния диапазон – добра основа, но има място за растеж и по-висока енергия.</p>\",\n    \"paragraph_2\": \"<p>С правилни промени можете бързо да повишите силата, либидото и възстановяването си, за да се почувствате по-мъжествен и жизнен.</p>\",\n    \"paragraph_3\": \"<p>Време е да предприемете действия днес – всеки ден без промяна е пропусната възможност.</p>\"\n  },\n  \"seven_day_upgrade_plan\": {\n    \"title\": \"<h2>7-дневен план за подобрение</h2>\",\n    \"day_1\": \"<p>Лягайте и ставайте по едно и също време; целете 7–8 часа сън.</p>\",\n    \"day_2\": \"<p>Добавете 30 минути силова тренировка (клекове, лицеви опори, тяга).</p>\",\n    \"day_3\": \"<p>Изключете алкохола за деня и увеличете приема на вода.</p>\",\n    \"day_4\": \"<p>Пригответе богата на протеин вечеря с чисто месо или риба.</p>\",\n    \"day_5\": \"<p>Направете 15-минутна медитация или разходка за по-нисък стрес.</p>\",\n    \"day_6\": \"<p>Избягвайте захар и преработени храни през целия ден.</p>\",\n    \"day_7\": \"<p>Оценете напредъка си и планирайте следващата седмица със същия график.</p>\"\n  },\n  \"five_key_tips\": {\n    \"title\": \"<h2>5 ключови съвета</h2>\",\n    \"tip_1\": \"<p>Спете поне 7–8 часа всяка нощ.</p>\",\n    \"tip_2\": \"<p>Тренирайте с тежести поне 3 пъти седмично.</p>\",\n    \"tip_3\": \"<p>Увеличете здравословните мазнини (яйца, риба, зехтин).</p>\",\n    \"tip_4\": \"<p>Ограничете алкохола и никотина до минимум.</p>\",\n    \"tip_5\": \"<p>Намалете стреса чрез йога, медитация или разходки.</p>\"\n  },\n  \"cta\": {\n    \"title\": \"<h2>Готов ли си за следващото ниво?</h2>\",\n    \"paragraph\": \"<p>Този план е само началото. За ежедневни съвети, хакове и мотивация от мъже като теб, които вече започнаха трансформацията си, присъедини се към нашата затворена Telegram група.</p>\",\n    \"button_label\": \"ПРИСЪЕДИНИ СЕ КЪМ ГРУПАТА\",\n    \"button_url\": \"https://t.me/your-telegram-link\",\n    \"button_markdown\": \"[ПРИСЪЕДИНИ СЕ КЪМ ГРУПАТА](https://t.me/your-telegram-link)\"\n  }\n}\n"
        },
        "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
        "typeVersion": 1.3,
        "position": [
          1696,
          -288
        ],
        "id": "bfc32194-e530-46c8-b267-2ff3d2c27f47",
        "name": "Structured Output Parser2"
      },
      {
        "parameters": {
          "jsonSchemaExample": "{\n  \"headline\": \"<h1>Прогнозен тестостерон: ~620 ng/dL посредствено ниво, можеш повече!</h1>\",\n  \"summary\": {\n    \"paragraph_1\": \"<p>Вашето ниво на тестостерон е в средния диапазон – добра основа, но има място за растеж и по-висока енергия.</p>\",\n    \"paragraph_2\": \"<p>С правилни промени можете бързо да повишите силата, либидото и възстановяването си, за да се почувствате по-мъжествен и жизнен.</p>\",\n    \"paragraph_3\": \"<p>Време е да предприемете действия днес – всеки ден без промяна е пропусната възможност.</p>\"\n  },\n  \"seven_day_upgrade_plan\": {\n    \"title\": \"<h2>7-дневен план за подобрение</h2>\",\n    \"day_1\": \"<p>Лягайте и ставайте по едно и също време; целете 7–8 часа сън.</p>\",\n    \"day_2\": \"<p>Добавете 30 минути силова тренировка (клекове, лицеви опори, тяга).</p>\",\n    \"day_3\": \"<p>Изключете алкохола за деня и увеличете приема на вода.</p>\",\n    \"day_4\": \"<p>Пригответе богата на протеин вечеря с чисто месо или риба.</p>\",\n    \"day_5\": \"<p>Направете 15-минутна медитация или разходка за по-нисък стрес.</p>\",\n    \"day_6\": \"<p>Избягвайте захар и преработени храни през целия ден.</p>\",\n    \"day_7\": \"<p>Оценете напредъка си и планирайте следващата седмица със същия график.</p>\"\n  },\n  \"five_key_tips\": {\n    \"title\": \"<h2>5 ключови съвета</h2>\",\n    \"tip_1\": \"<p>Спете поне 7–8 часа всяка нощ.</p>\",\n    \"tip_2\": \"<p>Тренирайте с тежести поне 3 пъти седмично.</p>\",\n    \"tip_3\": \"<p>Увеличете здравословните мазнини (яйца, риба, зехтин).</p>\",\n    \"tip_4\": \"<p>Ограничете алкохола и никотина до минимум.</p>\",\n    \"tip_5\": \"<p>Намалете стреса чрез йога, медитация или разходки.</p>\"\n  },\n  \"cta\": {\n    \"title\": \"<h2>Готов ли си за следващото ниво?</h2>\",\n    \"paragraph\": \"<p>Този план е само началото. За ежедневни съвети, хакове и мотивация от мъже като теб, които вече започнаха трансформацията си, присъедини се към нашата затворена Telegram група.</p>\",\n    \"button_label\": \"ПРИСЪЕДИНИ СЕ КЪМ ГРУПАТА\",\n    \"button_url\": \"https://t.me/your-telegram-link\",\n    \"button_markdown\": \"[ПРИСЪЕДИНИ СЕ КЪМ ГРУПАТА](https://t.me/your-telegram-link)\"\n  }\n}\n"
        },
        "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
        "typeVersion": 1.3,
        "position": [
          1712,
          112
        ],
        "id": "a71a28d6-f53a-46f8-9fbb-5da1adb17d81",
        "name": "Structured Output Parser3"
      },
      {
        "parameters": {
          "jsonSchemaExample": "{\n  \"headline\": \"<h1>Прогнозен тестостерон: ~12 nmol/L посредствено ниво, можеш повече!</h1>\",\n  \"summary\": {\n    \"paragraph_1\": \"<p>Вашето ниво на тестостерон е в средния диапазон – добра основа, но има място за растеж и по-висока енергия.</p>\",\n    \"paragraph_2\": \"<p>С правилни промени можете бързо да повишите силата, либидото и възстановяването си, за да се почувствате по-мъжествен и жизнен.</p>\",\n    \"paragraph_3\": \"<p>Време е да предприемете действия днес – всеки ден без промяна е пропусната възможност.</p>\"\n  },\n  \"seven_day_upgrade_plan\": {\n    \"title\": \"<h2>7-дневен план за подобрение</h2>\",\n    \"day_1\": \"<p>Лягайте и ставайте по едно и също време; целете 7–8 часа сън.</p>\",\n    \"day_2\": \"<p>Добавете 30 минути силова тренировка (клекове, лицеви опори, тяга).</p>\",\n    \"day_3\": \"<p>Изключете алкохола за деня и увеличете приема на вода.</p>\",\n    \"day_4\": \"<p>Пригответе богата на протеин вечеря с чисто месо или риба.</p>\",\n    \"day_5\": \"<p>Направете 15-минутна медитация или разходка за по-нисък стрес.</p>\",\n    \"day_6\": \"<p>Избягвайте захар и преработени храни през целия ден.</p>\",\n    \"day_7\": \"<p>Оценете напредъка си и планирайте следващата седмица със същия график.</p>\"\n  },\n  \"five_key_tips\": {\n    \"title\": \"<h2>5 ключови съвета</h2>\",\n    \"tip_1\": \"<p>Спете поне 7–8 часа всяка нощ.</p>\",\n    \"tip_2\": \"<p>Тренирайте с тежести поне 3 пъти седмично.</p>\",\n    \"tip_3\": \"<p>Увеличете здравословните мазнини (яйца, риба, зехтин).</p>\",\n    \"tip_4\": \"<p>Ограничете алкохола и никотина до минимум.</p>\",\n    \"tip_5\": \"<p>Намалете стреса чрез йога, медитация или разходки.</p>\"\n  },\n  \"cta\": {\n    \"title\": \"<h2>Готов ли си за следващото ниво?</h2>\",\n    \"paragraph\": \"<p>Този план е само началото. За ежедневни съвети, хакове и мотивация от мъже като теб, които вече започнаха трансформацията си, присъедини се към нашата затворена Telegram група.</p>\",\n    \"button_label\": \"ПРИСЪЕДИНИ СЕ КЪМ ГРУПАТА\",\n    \"button_url\": \"https://t.me/your-telegram-link\",\n    \"button_markdown\": \"[ПРИСЪЕДИНИ СЕ КЪМ ГРУПАТА](https://t.me/your-telegram-link)\"\n  }\n}\n"
        },
        "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
        "typeVersion": 1.3,
        "position": [
          1696,
          -736
        ],
        "id": "a092df0f-8bc4-4e0f-9299-f2530db73534",
        "name": "Structured Output Parser4"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=This is the content for the report:\n\nTitle: {{ $('AI Agent').item.json.output.title }}\n\nParagraph 1: {{ $('AI Agent').item.json.output.paragraphs[0] }}\n\nParagraph 2: {{ $('AI Agent').item.json.output.paragraphs[1] }}\n\nTip 1: {{ $('AI Agent').item.json.output.tips[0] }}\nTip 2: {{ $('AI Agent').item.json.output.tips[1] }}\nTip 3: {{ $('AI Agent').item.json.output.tips[2] }}\nTip 4: {{ $('AI Agent').item.json.output.tips[3] }}\nTip 5: {{ $('AI Agent').item.json.output.tips[4] }}\n\n\nThe headline of the report must be : \"{{ $('Create a record').item.json.fields['First Name'] }}, само {{ $('Switch').item.json.output.test }} nmol/L – време е да излезеш от зоната си на комфорт.\"",
          "hasOutputParser": true,
          "options": {
            "systemMessage": "=You are the “Low Testosterone” AI copywriter.\n\nPurpose\n- You receive a base report\n- Transform a plain testosterone report into a high-value lead-magnet PDF for men whose estimated total testosterone is in the *high-end* range (below 12 nmol/L).\n- Turn neutral data into an emotionally charged, high-impact narrative that motivates immediate action.\n\nPersonality & Tone\n- Supportive, urgent, understanding—acknowledge their struggle without making them feel worse about themselves. Be the lifeline they desperately need.\n- Conversational Bulgarian with reassuring but action-oriented language. You're talking to men who feel broken and ashamed. Use empathetic but motivating language.\n- Use rescue and recovery language that builds hope while creating immediate urgency for change. Be their trusted guide out of the crisis.\n\nLanguage Quality\n- Write in natural, idiomatic Bulgarian that sounds like a confident high-performance coach, not a machine translation.\n- Avoid awkward compound phrases (e.g., “висока-нормална стойност,” “по-плътна мускулна маса,” “по-силна експлозивност”,целенасочена делод, and so on with bullshit.).\n- Favor short, clear sentences and strong, everyday words for strength, focus, and vitality.\n- Keep the sophisticated, strategic tone—just expressed in fluent, modern Bulgarian.\n\nFramework\n- Apply Alex Hormozi’s **Value Equation**:\n  Value = (Dream Outcome × Perceived Likelihood of Achievement) ÷ (Time Delay × Effort & Sacrifice)\n    • Amplify the Dream Outcome with vivid, achievable “after” scenarios of strength, vitality, and masculine presence.\n    • Increase Perceived Likelihood by highlighting quick wins and clear proof points.\n    • Decrease Time Delay by giving actions with immediate effect or fast feedback.\n    • Reduce Effort & Sacrifice by offering simple, done-for-you steps and ready checklists.\n\nOutput Requirements\n- Every section must feel teasing and challenging, hinting the reader is far away from peak masculinity but its not hard to get there. It must address the reader directly and not use unlogical word combinations.\n\nStructure (and content guidance)\n1. **<Headline / Title**  \n   - Use the headline from the user prompt!(IMPORTANT)!\n\n2. **Quick Summary (3 paragraphs)**  \n   - Explain what “high” means and why it's useful to be higher'\n   - Paint a vivid “stronger you” scenario and create urgency to act now.\n\n3. **Increase your testosterone in 7 days** \n   - Use combinations like \"Увеличи\", \"повиши\", \"покачи\" тестостерона си\". Something like that for its heading.\n   - Provide a **bulleted list** of 7 clear, daily actions (one per day).  \n   - Each bullet must start with a strong action verb and promise a fast, noticeable win.\n\n4. **5 Key Tips**  \n   - Provide a **bulleted list** of exactly five concise, practical tips.  \n   - Each tip should feel like an insider secret or shortcut.\n"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 2.2,
        "position": [
          1552,
          -944
        ],
        "id": "0dc2027a-0189-4f72-bd75-ee9375b66aa7",
        "name": "Low Testosterone1"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=This is the content for the report:\n\nTitle: {{ $('AI Agent').item.json.output.title }}\n\nParagraph 1: {{ $('AI Agent').item.json.output.paragraphs[0] }}\n\nParagraph 2: {{ $('AI Agent').item.json.output.paragraphs[1] }}\n\nTip 1: {{ $('AI Agent').item.json.output.tips[0] }}\nTip 2: {{ $('AI Agent').item.json.output.tips[1] }}\nTip 3: {{ $('AI Agent').item.json.output.tips[2] }}\nTip 4: {{ $('AI Agent').item.json.output.tips[3] }}\nTip 5: {{ $('AI Agent').item.json.output.tips[4] }}\n\n\nThe headline of the report must be : \"{{ $('Create a record').item.json.fields['First Name'] }}, само {{ $('Switch').item.json.output.test }} nmol/L – не мислиш ли, че можеш много повече?\"",
          "hasOutputParser": true,
          "options": {
            "systemMessage": "=You are the “Average Testosterone” AI copywriter.\n\nPurpose\n- You receive a base report\n- Transform a plain testosterone report into a high-value lead-magnet PDF for men whose estimated total testosterone is in the *average* range (≈12–26 nmol/L).\n- Turn neutral data into an emotionally charged, high-impact narrative that motivates immediate action.\n\nPersonality & Tone\n- Bold, confident, motivating, slightly provocative—imply that \"average\" isn't good enough without insulting the reader but teasing him enough to make him want to take action.\n- Conversational Bulgarian with short, punchy sentences that create urgency and aspiration but not overcomplicated language, you are talking to unsecure people about their bodies. You have to use simple language.\n- Use subtle challenge and aspirational language to spark ambition while remaining friendly and trustworthy.\n\nLanguage Quality\n- Write in natural, idiomatic Bulgarian that sounds like a confident high-performance coach, not a machine translation.\n- Avoid awkward compound phrases (e.g., “висока-нормална стойност,” “по-плътна мускулна маса,” “по-силна експлозивност”,целенасочена делод, and so on with bullshit.).\n- Favor short, clear sentences and strong, everyday words for strength, focus, and vitality.\n- Keep the sophisticated, strategic tone—just expressed in fluent, modern Bulgarian.\n\nFramework\n- Apply Alex Hormozi’s **Value Equation**:\n  Value = (Dream Outcome × Perceived Likelihood of Achievement) ÷ (Time Delay × Effort & Sacrifice)\n    • Amplify the Dream Outcome with vivid, achievable “after” scenarios of strength, vitality, and masculine presence.\n    • Increase Perceived Likelihood by highlighting quick wins and clear proof points.\n    • Decrease Time Delay by giving actions with immediate effect or fast feedback.\n    • Reduce Effort & Sacrifice by offering simple, done-for-you steps and ready checklists.\n\nOutput Requirements\n- Every section must feel teasing and challenging, hinting the reader is not yet at peak masculinity. It must address the reader directly and not use unlogical word combinations.\n\nStructure (and content guidance)\n1. **<Headline / Title**  \n   - Use the headline from the user prompt!(IMPORTANT)!\n\n2. **Quick Summary (3 paragraphs)**  \n   - Explain what “average” means and why it’s not enough for optimal energy and confidence.  \n   - Paint a vivid “stronger you” scenario and create urgency to act now.\n\n3. **Increase your testosterone in 7 days**  \n   - Use combinations like \"Увеличи\", \"повиши\", \"покачи\" тестостерона си\". Something like that for its heading.\n   - Provide a **bulleted list** of 7 clear, daily actions (one per day).  \n   - Each bullet must start with a strong action verb and promise a fast, noticeable win.\n\n4. **5 Key Tips**  \n   - Provide a **bulleted list** of exactly five concise, practical tips.  \n   - Each tip should feel like an insider secret or shortcut.\n\n5. **Call to Action (CTA)**  \n   - **Heading:** `<h2>Готов ли си за следващото ниво?</h2>`  \n   - **Paragraph:** `Този план е само началото. За ежедневни съвети, хакове и мотивация от мъже като теб, които вече започнаха трансформацията си, присъедини се към нашата затворена Telegram група.`  \n   - **Button (Markdown link):** `[ПРИСЪЕДИНИ СЕ КЪМ ГРУПАТА](https://t.me/testographeu)`  \n   - Ensure this CTA feels exclusive and motivating, matching the elite high-performance vibe.\n\n\n"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 2.2,
        "position": [
          1552,
          -480
        ],
        "id": "fa97c262-2606-48d5-ae5f-69d785ad3b53",
        "name": "Average Testosterone1"
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=This is the content for the report:\n\nTitle: {{ $('AI Agent').item.json.output.title }}\n\nParagraph 1: {{ $('AI Agent').item.json.output.paragraphs[0] }}\n\nParagraph 2: {{ $('AI Agent').item.json.output.paragraphs[1] }}\n\nTip 1: {{ $('AI Agent').item.json.output.tips[0] }}\nTip 2: {{ $('AI Agent').item.json.output.tips[1] }}\nTip 3: {{ $('AI Agent').item.json.output.tips[2] }}\nTip 4: {{ $('AI Agent').item.json.output.tips[3] }}\nTip 5: {{ $('AI Agent').item.json.output.tips[4] }}\n\n\nThe headline of the report must be : \"{{ $('Create a record').item.json.fields['First Name'] }}, {{ $('Switch').item.json.output.test }} nmol/L – топ форма, но защо не вдигнеш още летвата?\"\n",
          "hasOutputParser": true,
          "options": {
            "systemMessage": "=You are the “High Testosterone” AI copywriter.\n\nPurpose\n- You receive a base report\n- Transform a plain testosterone report into a high-value lead-magnet PDF for men whose estimated total testosterone is in the *high-end* range (≈26+ nmol/L).\n- Turn neutral data into an emotionally charged, high-impact narrative that motivates immediate action.\n\nPersonality & Tone\n-Sophisticated, strategic, performance-focused—respect their current success while challenging them to reach elite levels. Speak to their competitive nature.\n- Conversational Bulgarian with confident, advanced language. You're talking to men who are already winning but want to dominate. Use optimization and peak performance language.\n- Use mastery and elite performance language that appeals to their desire to stay ahead of the competition and maximize their genetic potential.\n\nLanguage Quality\n- Write in natural, idiomatic Bulgarian that sounds like a confident high-performance coach, not a machine translation.\n- Avoid awkward compound phrases (e.g., “висока-нормална стойност,” “по-плътна мускулна маса,” “по-силна експлозивност”,целенасочена делод, and so on with bullshit.).\n- Favor short, clear sentences and strong, everyday words for strength, focus, and vitality.\n- Keep the sophisticated, strategic tone—just expressed in fluent, modern Bulgarian.\n\nFramework\n- Apply Alex Hormozi’s **Value Equation**:\n  Value = (Dream Outcome × Perceived Likelihood of Achievement) ÷ (Time Delay × Effort & Sacrifice)\n    • Amplify the Dream Outcome with vivid, achievable “after” scenarios of strength, vitality, and masculine presence.\n    • Increase Perceived Likelihood by highlighting quick wins and clear proof points.\n    • Decrease Time Delay by giving actions with immediate effect or fast feedback.\n    • Reduce Effort & Sacrifice by offering simple, done-for-you steps and ready checklists.\n\nOutput Requirements\n- Every section must feel teasing and challenging, hinting the reader is not yet at peak masculinity. It must address the reader directly and not use unlogical word combinations.\n\nStructure (and content guidance)\n1. **<Headline / Title**  \n   - Use the headline from the user prompt!(IMPORTANT)!\n\n2. **Quick Summary (3 paragraphs)**  \n   - Explain what “high” means and why it's useful to be higher'\n   - Paint a vivid “stronger you” scenario and create urgency to act now.\n\n3. **Increase your testosterone in 7 days**  \n   - Use combinations like \"Увеличи\", \"повиши\", \"покачи\" тестостерона си\". Something like that for its heading.\n   - Provide a **bulleted list** of 7 clear, daily actions (one per day).  \n   - Each bullet must start with a strong action verb and promise a fast, noticeable win.\n\n4. **5 Key Tips**  \n   - Provide a **bulleted list** of exactly five concise, practical tips.  \n   - Each tip should feel like an insider secret or shortcut.\n\n5. **Call to Action (CTA)**  \n   - **Heading:** `<h2>Готов ли си за следващото ниво?</h2>`  \n   - **Paragraph:** `Този план е само началото. За ежедневни съвети, хакове и мотивация от мъже като теб, които вече започнаха трансформацията си, присъедини се към нашата затворена Telegram група.`  \n   - **Button (Markdown link):** `[ПРИСЪЕДИНИ СЕ КЪМ ГРУПАТА](https://t.me/testographeu)`  \n   - Ensure this CTA feels exclusive and motivating, matching the elite high-performance vibe.\n"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 2.2,
        "position": [
          1568,
          -96
        ],
        "id": "b0c823cc-45f6-40d5-8633-5eb0614de2c3",
        "name": "High Testosterone1"
      },
      {
        "parameters": {
          "jsCode": "const o = $json.output || {};\nconst sum = o.summary || {};\nconst plan = o.seven_day_upgrade_plan || {};\nconst tips = o.five_key_tips || {};\nconst cta = o.cta || {};\n\nfunction wrap(tag, s) {\n  if (!s) return '';\n  s = String(s).trim();\n  if (s.startsWith('<')) return s;\n  return `<${tag}>${s}</${tag}>`;\n}\n\n// Remove a single outer <p>...</p> if present (helps list items look clean)\nfunction stripOuterP(s) {\n  if (!s) return '';\n  s = String(s).trim();\n  const m = s.match(/^<p>([\\s\\S]*?)<\\/p>$/i);\n  return m ? m[1] : s;\n}\n\n// --- Summary ---\nconst summary = [\n  wrap('p', sum.paragraph_1),\n  wrap('p', sum.paragraph_2),\n  wrap('p', sum.paragraph_3),\n].filter(Boolean).join('');\n\n// --- 7-Day Plan ---\nconst days = [\n  plan.day_1, plan.day_2, plan.day_3, plan.day_4,\n  plan.day_5, plan.day_6, plan.day_7,\n].filter(Boolean).map(d => `<li>${stripOuterP(d)}</li>`).join('');\n\nconst planBlock = `${wrap('h2', plan.title || '7-дневен план')}<ul>${days}</ul>`;\n\n// --- 5 Key Tips ---\nconst tipsList = [\n  tips.tip_1, tips.tip_2, tips.tip_3, tips.tip_4, tips.tip_5,\n].filter(Boolean).map(t => `<li>${stripOuterP(t)}</li>`).join('');\n\nconst tipsBlock = `${wrap('h2', tips.title || '5 ключови съвета')}<ul>${tipsList}</ul>`;\n\n// --- Headline & Disclaimer ---\nconst headline = wrap('h1', o.headline);\nconst disclaimer = o.disclaimer\n  ? wrap('p', o.disclaimer)\n  : '<p><em>За лабораторно точен резултат са нужни кръвни изследвания!</em></p>';\n\n// --- CTA (optional but preferred) ---\nlet ctaBlock = '';\nif (cta.title || cta.paragraph || cta.button_label || cta.button_url || cta.button_markdown) {\n  const ctaTitle = wrap('h2', cta.title || 'Готов ли си за следващото ниво?');\n  const ctaPara  = wrap('p', cta.paragraph || 'Този план е само началото. Присъедини се към нашата затворена Telegram група за ежедневни съвети и мотивация.');\n  // Prefer explicit URL + label; fallback to markdown if provided\n  let ctaButton = '';\n  if (cta.button_url && (cta.button_label || cta.button_markdown)) {\n    ctaButton = `<p><a href=\"${cta.button_url}\" target=\"_blank\" rel=\"noopener\" style=\"display:inline-block;padding:12px 18px;border-radius:8px;background:#6A0DAD;color:#fff;text-decoration:none;font-weight:700;\">${cta.button_label || 'Присъедини се към групата'}</a></p>`;\n  } else if (cta.button_markdown) {\n    // Very light MD -> HTML for button-like link (keeps 1-line output)\n    const md = String(cta.button_markdown).trim();\n    const mdMatch = md.match(/^\\[([^\\]]+)\\]\\(([^)]+)\\)$/);\n    if (mdMatch) {\n      ctaButton = `<p><a href=\"${mdMatch[2]}\" target=\"_blank\" rel=\"noopener\" style=\"display:inline-block;padding:12px 18px;border-radius:8px;background:#6A0DAD;color:#fff;text-decoration:none;font-weight:700;\">${mdMatch[1]}</a></p>`;\n    }\n  }\n  ctaBlock = `<section>${ctaTitle}${ctaPara}${ctaButton}</section>`;\n}\n\n// --- Final HTML, single line ---\nconst html = (\n  headline + summary + planBlock + tipsBlock + ctaBlock + disclaimer\n).replace(/\\n/g, '');\n\nreturn [{ json: { html } }];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          1872,
          -480
        ],
        "id": "dda8cb82-7b0e-4b9a-913f-603289f2e9b3",
        "name": "Clean HTML",
        "executeOnce": true
      },
      {
        "parameters": {
          "jsCode": "const o = $json.output || {};\nconst sum = o.summary || {};\nconst plan = o.seven_day_upgrade_plan || {};\nconst tips = o.five_key_tips || {};\nconst cta = o.cta || {};\n\nfunction wrap(tag, s) {\n  if (!s) return '';\n  s = String(s).trim();\n  if (s.startsWith('<')) return s;\n  return `<${tag}>${s}</${tag}>`;\n}\n\n// Remove a single outer <p>...</p> if present (helps list items look clean)\nfunction stripOuterP(s) {\n  if (!s) return '';\n  s = String(s).trim();\n  const m = s.match(/^<p>([\\s\\S]*?)<\\/p>$/i);\n  return m ? m[1] : s;\n}\n\n// --- Summary ---\nconst summary = [\n  wrap('p', sum.paragraph_1),\n  wrap('p', sum.paragraph_2),\n  wrap('p', sum.paragraph_3),\n].filter(Boolean).join('');\n\n// --- 7-Day Plan ---\nconst days = [\n  plan.day_1, plan.day_2, plan.day_3, plan.day_4,\n  plan.day_5, plan.day_6, plan.day_7,\n].filter(Boolean).map(d => `<li>${stripOuterP(d)}</li>`).join('');\n\nconst planBlock = `${wrap('h2', plan.title || '7-дневен план')}<ul>${days}</ul>`;\n\n// --- 5 Key Tips ---\nconst tipsList = [\n  tips.tip_1, tips.tip_2, tips.tip_3, tips.tip_4, tips.tip_5,\n].filter(Boolean).map(t => `<li>${stripOuterP(t)}</li>`).join('');\n\nconst tipsBlock = `${wrap('h2', tips.title || '5 ключови съвета')}<ul>${tipsList}</ul>`;\n\n// --- Headline & Disclaimer ---\nconst headline = wrap('h1', o.headline);\nconst disclaimer = o.disclaimer\n  ? wrap('p', o.disclaimer)\n  : '<p><em>За лабораторно точен резултат са нужни кръвни изследвания!</em></p>';\n\n// --- CTA (optional but preferred) ---\nlet ctaBlock = '';\nif (cta.title || cta.paragraph || cta.button_label || cta.button_url || cta.button_markdown) {\n  const ctaTitle = wrap('h2', cta.title || 'Готов ли си за следващото ниво?');\n  const ctaPara  = wrap('p', cta.paragraph || 'Този план е само началото. Присъедини се към нашата затворена Telegram група за ежедневни съвети и мотивация.');\n  // Prefer explicit URL + label; fallback to markdown if provided\n  let ctaButton = '';\n  if (cta.button_url && (cta.button_label || cta.button_markdown)) {\n    ctaButton = `<p><a href=\"${cta.button_url}\" target=\"_blank\" rel=\"noopener\" style=\"display:inline-block;padding:12px 18px;border-radius:8px;background:#6A0DAD;color:#fff;text-decoration:none;font-weight:700;\">${cta.button_label || 'Присъедини се към групата'}</a></p>`;\n  } else if (cta.button_markdown) {\n    // Very light MD -> HTML for button-like link (keeps 1-line output)\n    const md = String(cta.button_markdown).trim();\n    const mdMatch = md.match(/^\\[([^\\]]+)\\]\\(([^)]+)\\)$/);\n    if (mdMatch) {\n      ctaButton = `<p><a href=\"${mdMatch[2]}\" target=\"_blank\" rel=\"noopener\" style=\"display:inline-block;padding:12px 18px;border-radius:8px;background:#6A0DAD;color:#fff;text-decoration:none;font-weight:700;\">${mdMatch[1]}</a></p>`;\n    }\n  }\n  ctaBlock = `<section>${ctaTitle}${ctaPara}${ctaButton}</section>`;\n}\n\n// --- Final HTML, single line ---\nconst html = (\n  headline + summary + planBlock + tipsBlock + ctaBlock + disclaimer\n).replace(/\\n/g, '');\n\nreturn [{ json: { html } }];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          1872,
          -96
        ],
        "id": "3cb3e83f-8357-4589-8e0c-02cf809323f2",
        "name": "Clean HTML1",
        "executeOnce": true
      },
      {
        "parameters": {
          "jsCode": "const o = $json.output || {};\nconst sum = o.summary || {};\nconst plan = o.seven_day_upgrade_plan || {};\nconst tips = o.five_key_tips || {};\nconst cta = o.cta || {};\n\nfunction wrap(tag, s) {\n  if (!s) return '';\n  s = String(s).trim();\n  if (s.startsWith('<')) return s;\n  return `<${tag}>${s}</${tag}>`;\n}\n\n// Remove a single outer <p>...</p> if present (helps list items look clean)\nfunction stripOuterP(s) {\n  if (!s) return '';\n  s = String(s).trim();\n  const m = s.match(/^<p>([\\s\\S]*?)<\\/p>$/i);\n  return m ? m[1] : s;\n}\n\n// --- Summary ---\nconst summary = [\n  wrap('p', sum.paragraph_1),\n  wrap('p', sum.paragraph_2),\n  wrap('p', sum.paragraph_3),\n].filter(Boolean).join('');\n\n// --- 7-Day Plan ---\nconst days = [\n  plan.day_1, plan.day_2, plan.day_3, plan.day_4,\n  plan.day_5, plan.day_6, plan.day_7,\n].filter(Boolean).map(d => `<li>${stripOuterP(d)}</li>`).join('');\n\nconst planBlock = `${wrap('h2', plan.title || '7-дневен план')}<ul>${days}</ul>`;\n\n// --- 5 Key Tips ---\nconst tipsList = [\n  tips.tip_1, tips.tip_2, tips.tip_3, tips.tip_4, tips.tip_5,\n].filter(Boolean).map(t => `<li>${stripOuterP(t)}</li>`).join('');\n\nconst tipsBlock = `${wrap('h2', tips.title || '5 ключови съвета')}<ul>${tipsList}</ul>`;\n\n// --- Headline & Disclaimer ---\nconst headline = wrap('h1', o.headline);\nconst disclaimer = o.disclaimer\n  ? wrap('p', o.disclaimer)\n  : '<p><em>За лабораторно точен резултат са нужни кръвни изследвания!</em></p>';\n\n// --- CTA (optional but preferred) ---\nlet ctaBlock = '';\nif (cta.title || cta.paragraph || cta.button_label || cta.button_url || cta.button_markdown) {\n  const ctaTitle = wrap('h2', cta.title || 'Готов ли си за следващото ниво?');\n  const ctaPara  = wrap('p', cta.paragraph || 'Този план е само началото. Присъедини се към нашата затворена Telegram група за ежедневни съвети и мотивация.');\n  // Prefer explicit URL + label; fallback to markdown if provided\n  let ctaButton = '';\n  if (cta.button_url && (cta.button_label || cta.button_markdown)) {\n    ctaButton = `<p><a href=\"${cta.button_url}\" target=\"_blank\" rel=\"noopener\" style=\"display:inline-block;padding:12px 18px;border-radius:8px;background:#6A0DAD;color:#fff;text-decoration:none;font-weight:700;\">${cta.button_label || 'Присъедини се към групата'}</a></p>`;\n  } else if (cta.button_markdown) {\n    // Very light MD -> HTML for button-like link (keeps 1-line output)\n    const md = String(cta.button_markdown).trim();\n    const mdMatch = md.match(/^\\[([^\\]]+)\\]\\(([^)]+)\\)$/);\n    if (mdMatch) {\n      ctaButton = `<p><a href=\"${mdMatch[2]}\" target=\"_blank\" rel=\"noopener\" style=\"display:inline-block;padding:12px 18px;border-radius:8px;background:#6A0DAD;color:#fff;text-decoration:none;font-weight:700;\">${mdMatch[1]}</a></p>`;\n    }\n  }\n  ctaBlock = `<section>${ctaTitle}${ctaPara}${ctaButton}</section>`;\n}\n\n// --- Final HTML, single line ---\nconst html = (\n  headline + summary + planBlock + tipsBlock + ctaBlock + disclaimer\n).replace(/\\n/g, '');\n\nreturn [{ json: { html } }];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          1856,
          -944
        ],
        "id": "2ecff3a9-3a08-472e-96f8-41aa17cb66ef",
        "name": "Clean HTML2",
        "executeOnce": true
      },
      {
        "parameters": {
          "modelName": "models/gemini-2.5-pro",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          1568,
          112
        ],
        "id": "3fc72413-49f5-4bf2-a2be-a78cd3b1d0dc",
        "name": "Google Gemini Chat Model",
        "credentials": {
          "googlePalmApi": {
            "id": "rjS5xO5BfIkJWpfz",
            "name": "pravda gemini api"
          }
        }
      },
      {
        "parameters": {
          "modelName": "models/gemini-2.5-pro",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          1552,
          -288
        ],
        "id": "72c44f0f-4887-4080-8021-026203dc914b",
        "name": "Google Gemini Chat Model1",
        "credentials": {
          "googlePalmApi": {
            "id": "rjS5xO5BfIkJWpfz",
            "name": "pravda gemini api"
          }
        }
      },
      {
        "parameters": {
          "modelName": "models/gemini-2.5-pro",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
        "typeVersion": 1,
        "position": [
          1552,
          -736
        ],
        "id": "291bd66a-8740-4117-a898-647a878febeb",
        "name": "Google Gemini Chat Model2",
        "credentials": {
          "googlePalmApi": {
            "id": "rjS5xO5BfIkJWpfz",
            "name": "pravda gemini api"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// INPUT: put your HTML into $json.html (or change the source below)\nconst html = String($json.html || '');\n\n// ---------- helpers ----------\nconst strip = (s) => String(s || '').replace(/<[^>]+>/g, '').replace(/\\s+/g, ' ').trim();\nconst firstMatch = (re, s) => {\n  const m = String(s || '').match(re);\n  return m ? m[1] : '';\n};\nconst matchAll = (re, s) => Array.from(String(s || '').matchAll(re)).map(m => m[1]);\nconst escapeForRegex = (s) => String(s || '').replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n// ---------- H1 ----------\nconst h1 = strip(firstMatch(/<h1[^>]*>([\\s\\S]*?)<\\/h1>/i, html));\n\n// ---------- Paragraphs (first 3 <p>) ----------\nconst allP = matchAll(/<p[^>]*>([\\s\\S]*?)<\\/p>/gi, html).map(strip);\nconst paragraph1 = allP[0] || '';\nconst paragraph2 = allP[1] || '';\nconst paragraph3 = allP[2] || '';\n\n// ---------- collect all H2s ----------\nconst h2s = matchAll(/<h2[^>]*>([\\s\\S]*?)<\\/h2>/gi, html);\n\n// ---------- 7-Day Plan ----------\nlet plan_title = '';\nlet planItems = [];\nlet planIdx = h2s.findIndex(t => /7|\\bплан\\b/i.test(t));\nif (planIdx === -1) planIdx = 0;\n\nplan_title = strip(h2s[planIdx] || '');\nconst planH2Re = new RegExp(\n  `<h2[^>]*>\\\\s*${escapeForRegex(h2s[planIdx])}\\\\s*</h2>`,\n  'i'\n);\nconst afterPlanH2 = planH2Re.test(html) ? html.split(planH2Re)[1] : '';\nconst ulPlan = firstMatch(/<ul[^>]*>([\\s\\S]*?)<\\/ul>/i, afterPlanH2);\nplanItems = matchAll(/<li[^>]*>([\\s\\S]*?)<\\/li>/gi, ulPlan).map(strip).slice(0, 7);\n\n// ---------- 5 Tips (next H2 after plan H2) ----------\nlet tips_title = '';\nlet tipsItems = [];\nconst tipsIdx = planIdx + 1;\n\nif (h2s[tipsIdx]) {\n  tips_title = strip(h2s[tipsIdx]);\n  const tipsH2Re = new RegExp(\n    `<h2[^>]*>\\\\s*${escapeForRegex(h2s[tipsIdx])}\\\\s*</h2>`,\n    'i'\n  );\n  const afterTipsH2 = tipsH2Re.test(html) ? html.split(tipsH2Re)[1] : '';\n  const ulTips = firstMatch(/<ul[^>]*>([\\s\\S]*?)<\\/ul>/i, afterTipsH2);\n  tipsItems = matchAll(/<li[^>]*>([\\s\\S]*?)<\\/li>/gi, ulTips).map(strip).slice(0, 5);\n}\n\n// ---------- CTA (inside <section>) ----------\nconst section = firstMatch(/<section[^>]*>([\\s\\S]*?)<\\/section>/i, html) || '';\nconst cta_title = strip(firstMatch(/<h2[^>]*>([\\s\\S]*?)<\\/h2>/i, section));\nconst cta_paragraph = strip(firstMatch(/<p[^>]*>([\\s\\S]*?)<\\/p>/i, section));\nconst cta_a_inner = firstMatch(/<a[^>]*>([\\s\\S]*?)<\\/a>/i, section);\nconst cta_button_label = strip(cta_a_inner);\nconst cta_button_url = firstMatch(/<a[^>]*href=[\"']([^\"']+)[\"']/i, section);\n\n// ---------- Disclaimer ----------\nlet disclaimer = strip(firstMatch(/<p[^>]*>\\s*<em[^>]*>([\\s\\S]*?)<\\/em>\\s*<\\/p>/i, html));\nif (!disclaimer) {\n  disclaimer = strip(firstMatch(/<em[^>]*>([\\s\\S]*?)<\\/em>/i, html));\n}\n\n// ---------- build result ----------\nconst result = {\n  h1,\n  paragraph1,\n  paragraph2,\n  paragraph3,\n  plan_title,\n  day1: planItems[0] || '',\n  day2: planItems[1] || '',\n  day3: planItems[2] || '',\n  day4: planItems[3] || '',\n  day5: planItems[4] || '',\n  day6: planItems[5] || '',\n  day7: planItems[6] || '',\n  tips_title,\n  tip1: tipsItems[0] || '',\n  tip2: tipsItems[1] || '',\n  tip3: tipsItems[2] || '',\n  tip4: tipsItems[3] || '',\n  tip5: tipsItems[4] || '',\n  cta_title,\n  cta_paragraph,\n  cta_button_label,\n  cta_button_url,\n  disclaimer\n};\n\nreturn [{ json: result }];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          2080,
          -96
        ],
        "id": "1c52fcf2-c0da-46ef-885f-9dc4ecff5f99",
        "name": "Code in JavaScript"
      },
      {
        "parameters": {
          "operation": "copy",
          "fileId": {
            "__rl": true,
            "value": "1qzPn0HjRCe9ujDDsnI1EWBrgyDKvPEsEfSqxenOnVpg",
            "mode": "list",
            "cachedResultName": "Template Final",
            "cachedResultUrl": "https://docs.google.com/document/d/1qzPn0HjRCe9ujDDsnI1EWBrgyDKvPEsEfSqxenOnVpg/edit?usp=drivesdk"
          },
          "name": "=Testograph for {{ $('Switch').item.json.output.title }}",
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2288,
          -96
        ],
        "id": "62d61714-5116-4658-8507-02edc191e31d",
        "name": "Copy file",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "documentURL": "={{ $json.id }}",
          "actionsUi": {
            "actionFields": [
              {
                "action": "replaceAll",
                "text": "H1",
                "replaceText": "={{ $('Code in JavaScript').item.json.h1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph1",
                "replaceText": "={{ $('Code in JavaScript').item.json.paragraph1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph2",
                "replaceText": "={{ $('Code in JavaScript').item.json.paragraph2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph3",
                "replaceText": "={{ $('Code in JavaScript').item.json.paragraph3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "H2",
                "replaceText": "={{ $('Code in JavaScript').item.json.plan_title }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li1",
                "replaceText": "={{ $('Code in JavaScript').item.json.day1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li2",
                "replaceText": "={{ $('Code in JavaScript').item.json.day2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li3",
                "replaceText": "={{ $('Code in JavaScript').item.json.day3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li4",
                "replaceText": "={{ $('Code in JavaScript').item.json.day4 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li5",
                "replaceText": "={{ $('Code in JavaScript').item.json.day5 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li6",
                "replaceText": "={{ $('Code in JavaScript').item.json.day6 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li7",
                "replaceText": "={{ $('Code in JavaScript').item.json.day7 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "HEADTIP",
                "replaceText": "={{ $('Code in JavaScript').item.json.tips_title }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip1",
                "replaceText": "={{ $('Code in JavaScript').item.json.tip1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip2",
                "replaceText": "={{ $('Code in JavaScript').item.json.tip2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip3",
                "replaceText": "={{ $('Code in JavaScript').item.json.tip3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip4",
                "replaceText": "={{ $('Code in JavaScript').item.json.tip4 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip5",
                "replaceText": "={{ $('Code in JavaScript').item.json.tip5 }}",
                "matchCase": true
              }
            ]
          }
        },
        "type": "n8n-nodes-base.googleDocs",
        "typeVersion": 2,
        "position": [
          2496,
          -96
        ],
        "id": "e9708f5e-96ec-43d9-a7fe-878565c76b27",
        "name": "Update a document1",
        "credentials": {
          "googleDocsOAuth2Api": {
            "id": "o5Pe8vNAiuVK4rH9",
            "name": "google docs business pravda"
          }
        }
      },
      {
        "parameters": {
          "operation": "download",
          "fileId": {
            "__rl": true,
            "value": "={{ $json.documentId }}",
            "mode": "id"
          },
          "options": {
            "binaryPropertyName": "data",
            "googleFileConversion": {
              "conversion": {
                "docsToFormat": "application/pdf"
              }
            }
          }
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2704,
          -96
        ],
        "id": "74423683-4ad4-41d2-9671-0b9049c6a27d",
        "name": "Download file1",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "name": "={{ $('Copy file').item.json.name }}",
          "driveId": {
            "__rl": true,
            "mode": "list",
            "value": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "value": "18DqlQe9O4KdGe8DBz8Spns8Fslt6HWbf",
            "mode": "list",
            "cachedResultName": "Testograph",
            "cachedResultUrl": "https://drive.google.com/drive/folders/18DqlQe9O4KdGe8DBz8Spns8Fslt6HWbf"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2896,
          -96
        ],
        "id": "00971346-f5a7-4a24-af21-868faebaecec",
        "name": "Upload file",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// INPUT: put your HTML into $json.html (or change the source below)\nconst html = String($json.html || '');\n\n// ---------- helpers ----------\nconst strip = (s) => String(s || '').replace(/<[^>]+>/g, '').replace(/\\s+/g, ' ').trim();\nconst firstMatch = (re, s) => {\n  const m = String(s || '').match(re);\n  return m ? m[1] : '';\n};\nconst matchAll = (re, s) => Array.from(String(s || '').matchAll(re)).map(m => m[1]);\nconst escapeForRegex = (s) => String(s || '').replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n// ---------- H1 ----------\nconst h1 = strip(firstMatch(/<h1[^>]*>([\\s\\S]*?)<\\/h1>/i, html));\n\n// ---------- Paragraphs (first 3 <p>) ----------\nconst allP = matchAll(/<p[^>]*>([\\s\\S]*?)<\\/p>/gi, html).map(strip);\nconst paragraph1 = allP[0] || '';\nconst paragraph2 = allP[1] || '';\nconst paragraph3 = allP[2] || '';\n\n// ---------- collect all H2s ----------\nconst h2s = matchAll(/<h2[^>]*>([\\s\\S]*?)<\\/h2>/gi, html);\n\n// ---------- 7-Day Plan ----------\nlet plan_title = '';\nlet planItems = [];\nlet planIdx = h2s.findIndex(t => /7|\\bплан\\b/i.test(t));\nif (planIdx === -1) planIdx = 0;\n\nplan_title = strip(h2s[planIdx] || '');\nconst planH2Re = new RegExp(\n  `<h2[^>]*>\\\\s*${escapeForRegex(h2s[planIdx])}\\\\s*</h2>`,\n  'i'\n);\nconst afterPlanH2 = planH2Re.test(html) ? html.split(planH2Re)[1] : '';\nconst ulPlan = firstMatch(/<ul[^>]*>([\\s\\S]*?)<\\/ul>/i, afterPlanH2);\nplanItems = matchAll(/<li[^>]*>([\\s\\S]*?)<\\/li>/gi, ulPlan).map(strip).slice(0, 7);\n\n// ---------- 5 Tips (next H2 after plan H2) ----------\nlet tips_title = '';\nlet tipsItems = [];\nconst tipsIdx = planIdx + 1;\n\nif (h2s[tipsIdx]) {\n  tips_title = strip(h2s[tipsIdx]);\n  const tipsH2Re = new RegExp(\n    `<h2[^>]*>\\\\s*${escapeForRegex(h2s[tipsIdx])}\\\\s*</h2>`,\n    'i'\n  );\n  const afterTipsH2 = tipsH2Re.test(html) ? html.split(tipsH2Re)[1] : '';\n  const ulTips = firstMatch(/<ul[^>]*>([\\s\\S]*?)<\\/ul>/i, afterTipsH2);\n  tipsItems = matchAll(/<li[^>]*>([\\s\\S]*?)<\\/li>/gi, ulTips).map(strip).slice(0, 5);\n}\n\n// ---------- CTA (inside <section>) ----------\nconst section = firstMatch(/<section[^>]*>([\\s\\S]*?)<\\/section>/i, html) || '';\nconst cta_title = strip(firstMatch(/<h2[^>]*>([\\s\\S]*?)<\\/h2>/i, section));\nconst cta_paragraph = strip(firstMatch(/<p[^>]*>([\\s\\S]*?)<\\/p>/i, section));\nconst cta_a_inner = firstMatch(/<a[^>]*>([\\s\\S]*?)<\\/a>/i, section);\nconst cta_button_label = strip(cta_a_inner);\nconst cta_button_url = firstMatch(/<a[^>]*href=[\"']([^\"']+)[\"']/i, section);\n\n// ---------- Disclaimer ----------\nlet disclaimer = strip(firstMatch(/<p[^>]*>\\s*<em[^>]*>([\\s\\S]*?)<\\/em>\\s*<\\/p>/i, html));\nif (!disclaimer) {\n  disclaimer = strip(firstMatch(/<em[^>]*>([\\s\\S]*?)<\\/em>/i, html));\n}\n\n// ---------- build result ----------\nconst result = {\n  h1,\n  paragraph1,\n  paragraph2,\n  paragraph3,\n  plan_title,\n  day1: planItems[0] || '',\n  day2: planItems[1] || '',\n  day3: planItems[2] || '',\n  day4: planItems[3] || '',\n  day5: planItems[4] || '',\n  day6: planItems[5] || '',\n  day7: planItems[6] || '',\n  tips_title,\n  tip1: tipsItems[0] || '',\n  tip2: tipsItems[1] || '',\n  tip3: tipsItems[2] || '',\n  tip4: tipsItems[3] || '',\n  tip5: tipsItems[4] || '',\n  cta_title,\n  cta_paragraph,\n  cta_button_label,\n  cta_button_url,\n  disclaimer\n};\n\nreturn [{ json: result }];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          2080,
          -480
        ],
        "id": "0cb03d41-cc5d-4b02-a794-08c2164efb99",
        "name": "Code in JavaScript1"
      },
      {
        "parameters": {
          "operation": "copy",
          "fileId": {
            "__rl": true,
            "value": "1qzPn0HjRCe9ujDDsnI1EWBrgyDKvPEsEfSqxenOnVpg",
            "mode": "list",
            "cachedResultName": "Template Final",
            "cachedResultUrl": "https://docs.google.com/document/d/1qzPn0HjRCe9ujDDsnI1EWBrgyDKvPEsEfSqxenOnVpg/edit?usp=drivesdk"
          },
          "name": "=Testograph for {{ $('Switch').item.json.output.title }}",
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2272,
          -480
        ],
        "id": "f55e1e50-a7dd-44d1-83a8-bf205bb2381c",
        "name": "Copy file1",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "documentURL": "={{ $json.id }}",
          "actionsUi": {
            "actionFields": [
              {
                "action": "replaceAll",
                "text": "H1",
                "replaceText": "={{ $('Code in JavaScript1').item.json.h1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph1",
                "replaceText": "={{ $('Code in JavaScript1').item.json.paragraph1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph2",
                "replaceText": "={{ $('Code in JavaScript1').item.json.paragraph2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph3",
                "replaceText": "={{ $('Code in JavaScript1').item.json.paragraph3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "H2",
                "replaceText": "={{ $('Code in JavaScript1').item.json.plan_title }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li1",
                "replaceText": "={{ $('Code in JavaScript1').item.json.day1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li2",
                "replaceText": "={{ $('Code in JavaScript1').item.json.day2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li3",
                "replaceText": "={{ $('Code in JavaScript1').item.json.day3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li4",
                "replaceText": "={{ $('Code in JavaScript1').item.json.day4 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li5",
                "replaceText": "={{ $('Code in JavaScript1').item.json.day5 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li6",
                "replaceText": "={{ $('Code in JavaScript1').item.json.day6 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li7",
                "replaceText": "={{ $('Code in JavaScript1').item.json.day7 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "HEADTIP",
                "replaceText": "={{ $('Code in JavaScript1').item.json.tips_title }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip1",
                "replaceText": "={{ $('Code in JavaScript1').item.json.tip1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip2",
                "replaceText": "={{ $('Code in JavaScript1').item.json.tip2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip3",
                "replaceText": "={{ $('Code in JavaScript1').item.json.tip3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip4",
                "replaceText": "={{ $('Code in JavaScript1').item.json.tip4 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip5",
                "replaceText": "={{ $('Code in JavaScript1').item.json.tip5 }}",
                "matchCase": true
              }
            ]
          }
        },
        "type": "n8n-nodes-base.googleDocs",
        "typeVersion": 2,
        "position": [
          2480,
          -480
        ],
        "id": "e812f610-c5f8-4adf-9110-633c0215e098",
        "name": "Update a document",
        "credentials": {
          "googleDocsOAuth2Api": {
            "id": "o5Pe8vNAiuVK4rH9",
            "name": "google docs business pravda"
          }
        }
      },
      {
        "parameters": {
          "operation": "download",
          "fileId": {
            "__rl": true,
            "value": "={{ $json.documentId }}",
            "mode": "id"
          },
          "options": {
            "binaryPropertyName": "data",
            "googleFileConversion": {
              "conversion": {
                "docsToFormat": "application/pdf"
              }
            }
          }
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2688,
          -480
        ],
        "id": "3d595434-01a3-40f0-85ee-0d736bc0aefd",
        "name": "Download file",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "name": "={{ $('Copy file1').item.json.name }}",
          "driveId": {
            "__rl": true,
            "mode": "list",
            "value": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "value": "18DqlQe9O4KdGe8DBz8Spns8Fslt6HWbf",
            "mode": "list",
            "cachedResultName": "Testograph",
            "cachedResultUrl": "https://drive.google.com/drive/folders/18DqlQe9O4KdGe8DBz8Spns8Fslt6HWbf"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2880,
          -480
        ],
        "id": "5c2f548e-a66b-45a6-a900-f79ad9595c79",
        "name": "Upload file1",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// INPUT: put your HTML into $json.html (or change the source below)\nconst html = String($json.html || '');\n\n// ---------- helpers ----------\nconst strip = (s) => String(s || '').replace(/<[^>]+>/g, '').replace(/\\s+/g, ' ').trim();\nconst firstMatch = (re, s) => {\n  const m = String(s || '').match(re);\n  return m ? m[1] : '';\n};\nconst matchAll = (re, s) => Array.from(String(s || '').matchAll(re)).map(m => m[1]);\nconst escapeForRegex = (s) => String(s || '').replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n// ---------- H1 ----------\nconst h1 = strip(firstMatch(/<h1[^>]*>([\\s\\S]*?)<\\/h1>/i, html));\n\n// ---------- Paragraphs (first 3 <p>) ----------\nconst allP = matchAll(/<p[^>]*>([\\s\\S]*?)<\\/p>/gi, html).map(strip);\nconst paragraph1 = allP[0] || '';\nconst paragraph2 = allP[1] || '';\nconst paragraph3 = allP[2] || '';\n\n// ---------- collect all H2s ----------\nconst h2s = matchAll(/<h2[^>]*>([\\s\\S]*?)<\\/h2>/gi, html);\n\n// ---------- 7-Day Plan ----------\nlet plan_title = '';\nlet planItems = [];\nlet planIdx = h2s.findIndex(t => /7|\\bплан\\b/i.test(t));\nif (planIdx === -1) planIdx = 0;\n\nplan_title = strip(h2s[planIdx] || '');\nconst planH2Re = new RegExp(\n  `<h2[^>]*>\\\\s*${escapeForRegex(h2s[planIdx])}\\\\s*</h2>`,\n  'i'\n);\nconst afterPlanH2 = planH2Re.test(html) ? html.split(planH2Re)[1] : '';\nconst ulPlan = firstMatch(/<ul[^>]*>([\\s\\S]*?)<\\/ul>/i, afterPlanH2);\nplanItems = matchAll(/<li[^>]*>([\\s\\S]*?)<\\/li>/gi, ulPlan).map(strip).slice(0, 7);\n\n// ---------- 5 Tips (next H2 after plan H2) ----------\nlet tips_title = '';\nlet tipsItems = [];\nconst tipsIdx = planIdx + 1;\n\nif (h2s[tipsIdx]) {\n  tips_title = strip(h2s[tipsIdx]);\n  const tipsH2Re = new RegExp(\n    `<h2[^>]*>\\\\s*${escapeForRegex(h2s[tipsIdx])}\\\\s*</h2>`,\n    'i'\n  );\n  const afterTipsH2 = tipsH2Re.test(html) ? html.split(tipsH2Re)[1] : '';\n  const ulTips = firstMatch(/<ul[^>]*>([\\s\\S]*?)<\\/ul>/i, afterTipsH2);\n  tipsItems = matchAll(/<li[^>]*>([\\s\\S]*?)<\\/li>/gi, ulTips).map(strip).slice(0, 5);\n}\n\n// ---------- CTA (inside <section>) ----------\nconst section = firstMatch(/<section[^>]*>([\\s\\S]*?)<\\/section>/i, html) || '';\nconst cta_title = strip(firstMatch(/<h2[^>]*>([\\s\\S]*?)<\\/h2>/i, section));\nconst cta_paragraph = strip(firstMatch(/<p[^>]*>([\\s\\S]*?)<\\/p>/i, section));\nconst cta_a_inner = firstMatch(/<a[^>]*>([\\s\\S]*?)<\\/a>/i, section);\nconst cta_button_label = strip(cta_a_inner);\nconst cta_button_url = firstMatch(/<a[^>]*href=[\"']([^\"']+)[\"']/i, section);\n\n// ---------- Disclaimer ----------\nlet disclaimer = strip(firstMatch(/<p[^>]*>\\s*<em[^>]*>([\\s\\S]*?)<\\/em>\\s*<\\/p>/i, html));\nif (!disclaimer) {\n  disclaimer = strip(firstMatch(/<em[^>]*>([\\s\\S]*?)<\\/em>/i, html));\n}\n\n// ---------- build result ----------\nconst result = {\n  h1,\n  paragraph1,\n  paragraph2,\n  paragraph3,\n  plan_title,\n  day1: planItems[0] || '',\n  day2: planItems[1] || '',\n  day3: planItems[2] || '',\n  day4: planItems[3] || '',\n  day5: planItems[4] || '',\n  day6: planItems[5] || '',\n  day7: planItems[6] || '',\n  tips_title,\n  tip1: tipsItems[0] || '',\n  tip2: tipsItems[1] || '',\n  tip3: tipsItems[2] || '',\n  tip4: tipsItems[3] || '',\n  tip5: tipsItems[4] || '',\n  cta_title,\n  cta_paragraph,\n  cta_button_label,\n  cta_button_url,\n  disclaimer\n};\n\nreturn [{ json: result }];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          2080,
          -944
        ],
        "id": "0291e358-3baf-443c-ae34-50cca49a71e3",
        "name": "Code in JavaScript2"
      },
      {
        "parameters": {
          "operation": "copy",
          "fileId": {
            "__rl": true,
            "value": "1qzPn0HjRCe9ujDDsnI1EWBrgyDKvPEsEfSqxenOnVpg",
            "mode": "list",
            "cachedResultName": "Template Final",
            "cachedResultUrl": "https://docs.google.com/document/d/1qzPn0HjRCe9ujDDsnI1EWBrgyDKvPEsEfSqxenOnVpg/edit?usp=drivesdk"
          },
          "name": "=Testograph for {{ $('Switch').item.json.output.title }}",
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2272,
          -944
        ],
        "id": "71137f39-29e4-4d7f-8564-bf6a08e2107e",
        "name": "Copy file2",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "operation": "update",
          "documentURL": "={{ $json.id }}",
          "actionsUi": {
            "actionFields": [
              {
                "action": "replaceAll",
                "text": "H1",
                "replaceText": "={{ $('Code in JavaScript2').item.json.h1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph1",
                "replaceText": "={{ $('Code in JavaScript2').item.json.paragraph1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph2",
                "replaceText": "={{ $('Code in JavaScript2').item.json.paragraph2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Paragraph3",
                "replaceText": "={{ $('Code in JavaScript2').item.json.paragraph3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "H2",
                "replaceText": "={{ $('Code in JavaScript2').item.json.plan_title }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li1",
                "replaceText": "={{ $('Code in JavaScript2').item.json.day1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li2",
                "replaceText": "={{ $('Code in JavaScript2').item.json.day2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li3",
                "replaceText": "={{ $('Code in JavaScript2').item.json.day3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li4",
                "replaceText": "={{ $('Code in JavaScript2').item.json.day4 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li5",
                "replaceText": "={{ $('Code in JavaScript2').item.json.day5 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li6",
                "replaceText": "={{ $('Code in JavaScript2').item.json.day6 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Li7",
                "replaceText": "={{ $('Code in JavaScript2').item.json.day7 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "HEADTIP",
                "replaceText": "={{ $('Code in JavaScript2').item.json.tips_title }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip1",
                "replaceText": "={{ $('Code in JavaScript2').item.json.tip1 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip2",
                "replaceText": "={{ $('Code in JavaScript2').item.json.tip2 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip3",
                "replaceText": "={{ $('Code in JavaScript2').item.json.tip3 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip4",
                "replaceText": "={{ $('Code in JavaScript2').item.json.tip4 }}",
                "matchCase": true
              },
              {
                "action": "replaceAll",
                "text": "Tip5",
                "replaceText": "={{ $('Code in JavaScript2').item.json.tip5 }}",
                "matchCase": true
              }
            ]
          }
        },
        "type": "n8n-nodes-base.googleDocs",
        "typeVersion": 2,
        "position": [
          2480,
          -944
        ],
        "id": "693d0ae7-d404-44d1-9b53-1e8d273e591d",
        "name": "Update a document2",
        "credentials": {
          "googleDocsOAuth2Api": {
            "id": "o5Pe8vNAiuVK4rH9",
            "name": "google docs business pravda"
          }
        }
      },
      {
        "parameters": {
          "operation": "download",
          "fileId": {
            "__rl": true,
            "value": "={{ $json.documentId }}",
            "mode": "id"
          },
          "options": {
            "binaryPropertyName": "data",
            "googleFileConversion": {
              "conversion": {
                "docsToFormat": "application/pdf"
              }
            }
          }
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2688,
          -944
        ],
        "id": "9d2a6279-6411-4cc0-967c-d3f65bf728d1",
        "name": "Download file2",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "name": "={{ $('Copy file2').item.json.name }}",
          "driveId": {
            "__rl": true,
            "mode": "list",
            "value": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "value": "18DqlQe9O4KdGe8DBz8Spns8Fslt6HWbf",
            "mode": "list",
            "cachedResultName": "Testograph",
            "cachedResultUrl": "https://drive.google.com/drive/folders/18DqlQe9O4KdGe8DBz8Spns8Fslt6HWbf"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          2880,
          -944
        ],
        "id": "447913b7-2859-486a-af01-d34682e89232",
        "name": "Upload file2",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "operation": "share",
          "fileId": {
            "__rl": true,
            "value": "={{ $json.id }}",
            "mode": "id"
          },
          "permissionsUi": {
            "permissionsValues": {
              "role": "reader",
              "type": "anyone"
            }
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          3088,
          -480
        ],
        "id": "79424e74-df0b-4665-9cda-ee689958b971",
        "name": "Share file",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "operation": "share",
          "fileId": {
            "__rl": true,
            "value": "={{ $json.id }}",
            "mode": "id"
          },
          "permissionsUi": {
            "permissionsValues": {
              "role": "reader",
              "type": "anyone"
            }
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          3104,
          -96
        ],
        "id": "ef888b03-bbef-4372-b146-922675abbab0",
        "name": "Share file1",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "operation": "share",
          "fileId": {
            "__rl": true,
            "value": "={{ $json.id }}",
            "mode": "id"
          },
          "permissionsUi": {
            "permissionsValues": {
              "role": "reader",
              "type": "anyone"
            }
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          3072,
          -944
        ],
        "id": "df089fee-8fce-484a-b9d5-23788ed07fe6",
        "name": "Share file2",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "luLc2aPyM5REjYul",
            "name": "Business Pravda Agency"
          }
        }
      },
      {
        "parameters": {
          "sendTo": "={{ $('Create a record').item.json.fields.Email }}",
          "subject": "Твоят Testograph пристигна!",
          "message": "=<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"color-scheme\" content=\"light dark\">\n    <meta name=\"supported-color-schemes\" content=\"light dark\">\n    <title>Вашият Testograph</title>\n    <style>\n        @media (prefers-color-scheme: dark) {\n            .header-text, .sub-header-text, .main-text, .list, .signature-text {\n                color: #e9e7ff !important;\n            }\n            .main-card {\n                background-color: #15162a !important;\n            }\n        }\n    </style>\n</head>\n<body style=\"margin:0; padding:0; background:#0e0f1a; color:#e9e7ff; font-family: Arial, Helvetica, sans-serif;\">\n    <table role=\"presentation\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"background:#0e0f1a;\">\n        <tr>\n            <td align=\"center\" style=\"padding:32px 16px;\">\n                <table role=\"presentation\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" class=\"main-card\" style=\"max-width:640px; background:#15162a; border-radius:16px; border:1px solid #9c78ff;\">\n                    <tr>\n                        <td style=\"padding:32px 28px;\">\n                            <div style=\"text-align:center;\">\n                                <p style=\"text-transform:uppercase; color:#a89ad7;\">Testograph</p>\n                                <h1 class=\"header-text\" style=\"color:#ffffff;\">Здрасти {{ $('Create a record').item.json.fields['First Name'] }},</h1>\n                                <h2 class=\"sub-header-text\" style=\"color:#cfc9ff; font-weight:normal;\">Готов е твоят <span style=\"color:#9f67ff;\">Testograph</span>.</h2>\n                            </div>\n\n                            <div style=\"text-align:center; margin: 28px 0;\">\n                                <a href=\"https://drive.google.com/file/d/{{ $('Upload file1').item.json.id }}/view\" target=\"_blank\" style=\"display:inline-block; text-decoration:none; color:#ffffff; font-weight:bold; padding:14px 26px; border-radius:14px; background:#9f67ff;\">\n                                    СВАЛИ СВОЯТ TESTOGRAPH\n                                </a>\n                            </div>\n\n                          \n                            \n                            <h3 style=\"color:#bbaeff;\">Какво ще намериш вътре:</h3>\n                            <ul class=\"list\" style=\"padding-left: 20px; line-height: 1.6; color: #e9e7ff;\">\n                                <li>Защо не се чувстваш като преди</li>\n                                <li>Какво не ти казват лекарите</li>\n                                <li>Как да върнеш силата за 2 седмици</li>\n                                <li><strong>Връзка към затворена Telegram група само за мъже</strong></li>\n                            </ul>\n                            \n                            <hr style=\"border:none; border-top:1px solid #9c78ff4a; margin:20px 0;\">\n\n                            <p class=\"main-text\" style=\"line-height:1.7; color:#e9e7ff;\">Повечето хора свалят файла и го оставят да събира прах.</p>\n                            <p class=\"header-text\" style=\"font-weight:bold; color:#ffffff;\">Не прави тази грешка — отвори го още сега и започни.</p>\n\n                            <div style=\"text-align:center; margin:22px 0;\">\n                                <a href=\"https://drive.google.com/file/d/{{ $('Upload file1').item.json.id }}/view\" target=\"_blank\" style=\"display:inline-block; text-decoration:none; color:#ffffff; font-weight:bold; padding:12px 22px; border-radius:12px; background:#9f67ff;\">\n                                    СВАЛИ СЕГА\n                                </a>\n                            </div>\n\n                            <p class=\"signature-text\" style=\"text-align:center; color:#e9e7ff;\">— Петър, <span style=\"color:#9f67ff; font-weight:bold;\">Testograph</span></p>\n                            <p style=\"text-align:center; font-size:12px; color:#a89ad7;\">P.S. Линкът ще бъде активен още 48 часа.</p>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n</body>\n</html>",
          "options": {
            "appendAttribution": false
          }
        },
        "type": "n8n-nodes-base.gmail",
        "typeVersion": 2.1,
        "position": [
          3296,
          -480
        ],
        "id": "73c4c136-101b-44e9-a581-2d2ec1326437",
        "name": "Send a message",
        "webhookId": "8ff5a600-4c7f-4809-a2d2-1ae6e62d1600",
        "credentials": {
          "gmailOAuth2": {
            "id": "wN97wqWg7adbfIvC",
            "name": "Testograph Gmail"
          }
        }
      },
      {
        "parameters": {
          "sendTo": "={{ $('Create a record').item.json.fields.Email }}",
          "subject": "Твоят Testograph пристигна!",
          "message": "=<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"color-scheme\" content=\"light dark\">\n    <meta name=\"supported-color-schemes\" content=\"light dark\">\n    <title>Вашият Testograph</title>\n    <style>\n        @media (prefers-color-scheme: dark) {\n            .header-text, .sub-header-text, .main-text, .list, .signature-text {\n                color: #e9e7ff !important;\n            }\n            .main-card {\n                background-color: #15162a !important;\n            }\n        }\n    </style>\n</head>\n<body style=\"margin:0; padding:0; background:#0e0f1a; color:#e9e7ff; font-family: Arial, Helvetica, sans-serif;\">\n    <table role=\"presentation\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"background:#0e0f1a;\">\n        <tr>\n            <td align=\"center\" style=\"padding:32px 16px;\">\n                <table role=\"presentation\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" class=\"main-card\" style=\"max-width:640px; background:#15162a; border-radius:16px; border:1px solid #9c78ff;\">\n                    <tr>\n                        <td style=\"padding:32px 28px;\">\n                            <div style=\"text-align:center;\">\n                                <p style=\"text-transform:uppercase; color:#a89ad7;\">Testograph</p>\n                                <h1 class=\"header-text\" style=\"color:#ffffff;\">Здрасти {{ $('Create a record').item.json.fields['First Name'] }},</h1>\n                                <h2 class=\"sub-header-text\" style=\"color:#cfc9ff; font-weight:normal;\">Готов е твоят <span style=\"color:#9f67ff;\">Testograph</span>.</h2>\n                            </div>\n\n                            <div style=\"text-align:center; margin: 28px 0;\">\n                                <a href=\"https://drive.google.com/file/d/{{ $('Upload file').item.json.id }}/view\" target=\"_blank\" style=\"display:inline-block; text-decoration:none; color:#ffffff; font-weight:bold; padding:14px 26px; border-radius:14px; background:#9f67ff;\">\n                                    СВАЛИ СВОЯТ TESTOGRAPH\n                                </a>\n                            </div>\n\n                          \n                            \n                            <h3 style=\"color:#bbaeff;\">Какво ще намериш вътре:</h3>\n                            <ul class=\"list\" style=\"padding-left: 20px; line-height: 1.6; color: #e9e7ff;\">\n                                <li>Защо не се чувстваш като преди</li>\n                                <li>Какво не ти казват лекарите</li>\n                                <li>Как да върнеш силата за 2 седмици</li>\n                                <li><strong>Връзка към затворена Telegram група само за мъже</strong></li>\n                            </ul>\n                            \n                            <hr style=\"border:none; border-top:1px solid #9c78ff4a; margin:20px 0;\">\n\n                            <p class=\"main-text\" style=\"line-height:1.7; color:#e9e7ff;\">Повечето хора свалят файла и го оставят да събира прах.</p>\n                            <p class=\"header-text\" style=\"font-weight:bold; color:#ffffff;\">Не прави тази грешка — отвори го още сега и започни.</p>\n\n                            <div style=\"text-align:center; margin:22px 0;\">\n                                <a href=\"https://drive.google.com/file/d/{{ $('Upload file').item.json.id }}/view\" target=\"_blank\" style=\"display:inline-block; text-decoration:none; color:#ffffff; font-weight:bold; padding:12px 22px; border-radius:12px; background:#9f67ff;\">\n                                    СВАЛИ СЕГА\n                                </a>\n                            </div>\n\n                            <p class=\"signature-text\" style=\"text-align:center; color:#e9e7ff;\">— Петър, <span style=\"color:#9f67ff; font-weight:bold;\">Testograph</span></p>\n                            <p style=\"text-align:center; font-size:12px; color:#a89ad7;\">P.S. Линкът ще бъде активен още 48 часа.</p>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n</body>\n</html>",
          "options": {
            "appendAttribution": false
          }
        },
        "type": "n8n-nodes-base.gmail",
        "typeVersion": 2.1,
        "position": [
          3312,
          -96
        ],
        "id": "9ac76b38-6d9c-47d6-9c89-54ec38effd4d",
        "name": "Send a message1",
        "webhookId": "8ff5a600-4c7f-4809-a2d2-1ae6e62d1600",
        "credentials": {
          "gmailOAuth2": {
            "id": "wN97wqWg7adbfIvC",
            "name": "Testograph Gmail"
          }
        }
      },
      {
        "parameters": {
          "sendTo": "={{ $('Create a record').item.json.fields.Email }}",
          "subject": "Твоят Testograph пристигна!",
          "message": "=<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"color-scheme\" content=\"light dark\">\n    <meta name=\"supported-color-schemes\" content=\"light dark\">\n    <title>Вашият Testograph</title>\n    <style>\n        @media (prefers-color-scheme: dark) {\n            .header-text, .sub-header-text, .main-text, .list, .signature-text {\n                color: #e9e7ff !important;\n            }\n            .main-card {\n                background-color: #15162a !important;\n            }\n        }\n    </style>\n</head>\n<body style=\"margin:0; padding:0; background:#0e0f1a; color:#e9e7ff; font-family: Arial, Helvetica, sans-serif;\">\n    <table role=\"presentation\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"background:#0e0f1a;\">\n        <tr>\n            <td align=\"center\" style=\"padding:32px 16px;\">\n                <table role=\"presentation\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" class=\"main-card\" style=\"max-width:640px; background:#15162a; border-radius:16px; border:1px solid #9c78ff;\">\n                    <tr>\n                        <td style=\"padding:32px 28px;\">\n                            <div style=\"text-align:center;\">\n                                <p style=\"text-transform:uppercase; color:#a89ad7;\">Testograph</p>\n                                <h1 class=\"header-text\" style=\"color:#ffffff;\">Здрасти {{ $('Create a record').item.json.fields['First Name'] }},</h1>\n                                <h2 class=\"sub-header-text\" style=\"color:#cfc9ff; font-weight:normal;\">Готов е твоят <span style=\"color:#9f67ff;\">Testograph</span>.</h2>\n                            </div>\n\n                            <div style=\"text-align:center; margin: 28px 0;\">\n                                <a href=\"https://drive.google.com/file/d/{{ $('Upload file2').item.json.id }}/view\" target=\"_blank\" style=\"display:inline-block; text-decoration:none; color:#ffffff; font-weight:bold; padding:14px 26px; border-radius:14px; background:#9f67ff;\">\n                                    СВАЛИ СВОЯТ TESTOGRAPH\n                                </a>\n                            </div>\n\n                          \n                            \n                            <h3 style=\"color:#bbaeff;\">Какво ще намериш вътре:</h3>\n                            <ul class=\"list\" style=\"padding-left: 20px; line-height: 1.6; color: #e9e7ff;\">\n                                <li>Защо не се чувстваш като преди</li>\n                                <li>Какво не ти казват лекарите</li>\n                                <li>Как да върнеш силата за 2 седмици</li>\n                                <li><strong>Връзка към затворена Telegram група само за мъже</strong></li>\n                            </ul>\n                            \n                            <hr style=\"border:none; border-top:1px solid #9c78ff4a; margin:20px 0;\">\n\n                            <p class=\"main-text\" style=\"line-height:1.7; color:#e9e7ff;\">Повечето хора свалят файла и го оставят да събира прах.</p>\n                            <p class=\"header-text\" style=\"font-weight:bold; color:#ffffff;\">Не прави тази грешка — отвори го още сега и започни.</p>\n\n                            <div style=\"text-align:center; margin:22px 0;\">\n                                <a href=\"https://drive.google.com/file/d/{{ $('Upload file2').item.json.id }}/view\" target=\"_blank\" style=\"display:inline-block; text-decoration:none; color:#ffffff; font-weight:bold; padding:12px 22px; border-radius:12px; background:#9f67ff;\">\n                                    СВАЛИ СЕГА\n                                </a>\n                            </div>\n\n                            <p class=\"signature-text\" style=\"text-align:center; color:#e9e7ff;\">— Петър, <span style=\"color:#9f67ff; font-weight:bold;\">Testograph</span></p>\n                            <p style=\"text-align:center; font-size:12px; color:#a89ad7;\">P.S. Линкът ще бъде активен още 48 часа.</p>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n</body>\n</html>",
          "options": {
            "appendAttribution": false
          }
        },
        "type": "n8n-nodes-base.gmail",
        "typeVersion": 2.1,
        "position": [
          3296,
          -944
        ],
        "id": "5a1ee302-1a9d-4c65-ba11-d98baca08e00",
        "name": "Send a message2",
        "webhookId": "8ff5a600-4c7f-4809-a2d2-1ae6e62d1600",
        "credentials": {
          "gmailOAuth2": {
            "id": "wN97wqWg7adbfIvC",
            "name": "Testograph Gmail"
          }
        }
      },
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "testo",
          "options": {
            "allowedOrigins": "https://testograph.eu"
          }
        },
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 2.1,
        "position": [
          176,
          -576
        ],
        "id": "8bf27b65-ea1a-4490-9988-8a40b86150a0",
        "name": "Webhook1",
        "webhookId": "79e14fda-efef-4077-b9d4-ac19657d6783"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://testograph.eu/api/quiz/save-result",
          "authentication": "none",
          "sendBody": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "email",
                "value": "={{ $node['Webhook1'].json['body']['email'] }}"
              },
              {
                "name": "first_name",
                "value": "={{ $node['Webhook1'].json['body']['firstName'] }}"
              },
              {
                "name": "age",
                "value": "={{ $node['Webhook1'].json['body']['age'] }}"
              },
              {
                "name": "height",
                "value": "={{ $node['Webhook1'].json['body']['height'] }}"
              },
              {
                "name": "weight",
                "value": "={{ $node['Webhook1'].json['body']['weight'] }}"
              },
              {
                "name": "sleep",
                "value": "={{ $node['Webhook1'].json['body']['averageSleep'] }}"
              },
              {
                "name": "alcohol",
                "value": "={{ $node['Webhook1'].json['body']['alcohol'] }}"
              },
              {
                "name": "nicotine",
                "value": "={{ $node['Webhook1'].json['body']['nicotine'] }}"
              },
              {
                "name": "diet",
                "value": "={{ $node['Webhook1'].json['body']['diet'] }}"
              },
              {
                "name": "stress",
                "value": 5
              },
              {
                "name": "training_frequency",
                "value": "={{ $node['Webhook1'].json['body']['trainingFrequency'] }}"
              },
              {
                "name": "training_type",
                "value": "={{ $node['Webhook1'].json['body']['trainingType'] }}"
              },
              {
                "name": "recovery",
                "value": "={{ $node['Webhook1'].json['body']['recovery'] }}"
              },
              {
                "name": "supplements",
                "value": "={{ $node['Webhook1'].json['body']['supplements'] }}"
              },
              {
                "name": "libido",
                "value": "={{ $node['Webhook1'].json['body']['libido'] }}"
              },
              {
                "name": "morning_erection",
                "value": "={{ $node['Webhook1'].json['body']['morningErection'] }}"
              },
              {
                "name": "morning_energy",
                "value": "={{ $node['Webhook1'].json['body']['morningEnergy'] }}"
              },
              {
                "name": "concentration",
                "value": 5
              },
              {
                "name": "mood",
                "value": "={{ $node['Webhook1'].json['body']['mood'] }}"
              },
              {
                "name": "muscle_mass",
                "value": "same"
              },
              {
                "name": "score",
                "value": 0
              },
              {
                "name": "testosterone_level",
                "value": 0
              },
              {
                "name": "testosterone_category",
                "value": "unknown"
              },
              {
                "name": "risk_level",
                "value": "moderate"
              },
              {
                "name": "recommended_tier",
                "value": "regular"
              },
              {
                "name": "source",
                "value": "homepage_form"
              }
            ]
          },
          "options": {
            "bodyContentType": "json"
          }
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          640,
          -640
        ],
        "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
        "name": "Save to Supabase DB"
      }
    ],
    "connections": {
      "AI Agent": {
        "main": [
          [
            {
              "node": "Switch",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "AI Agent",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Create a record": {
        "main": [
          [
            {
              "node": "AI Agent",
              "type": "main",
              "index": 0
            },
            {
              "node": "Save to Supabase DB",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Structured Output Parser": {
        "ai_outputParser": [
          [
            {
              "node": "AI Agent",
              "type": "ai_outputParser",
              "index": 0
            }
          ]
        ]
      },
      "Switch": {
        "main": [
          [
            {
              "node": "Set T -> Low",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set T -> Average",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Set T -> High",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set T -> Low": {
        "main": [
          [
            {
              "node": "Low Testosterone1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set T -> Average": {
        "main": [
          [
            {
              "node": "Average Testosterone1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set T -> High": {
        "main": [
          [
            {
              "node": "High Testosterone1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Structured Output Parser2": {
        "ai_outputParser": [
          [
            {
              "node": "Average Testosterone1",
              "type": "ai_outputParser",
              "index": 0
            }
          ]
        ]
      },
      "Structured Output Parser3": {
        "ai_outputParser": [
          [
            {
              "node": "High Testosterone1",
              "type": "ai_outputParser",
              "index": 0
            }
          ]
        ]
      },
      "Structured Output Parser4": {
        "ai_outputParser": [
          [
            {
              "node": "Low Testosterone1",
              "type": "ai_outputParser",
              "index": 0
            }
          ]
        ]
      },
      "Low Testosterone1": {
        "main": [
          [
            {
              "node": "Clean HTML2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Average Testosterone1": {
        "main": [
          [
            {
              "node": "Clean HTML",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "High Testosterone1": {
        "main": [
          [
            {
              "node": "Clean HTML1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Clean HTML": {
        "main": [
          [
            {
              "node": "Code in JavaScript1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Clean HTML1": {
        "main": [
          [
            {
              "node": "Code in JavaScript",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Clean HTML2": {
        "main": [
          [
            {
              "node": "Code in JavaScript2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "High Testosterone1",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model1": {
        "ai_languageModel": [
          [
            {
              "node": "Average Testosterone1",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Google Gemini Chat Model2": {
        "ai_languageModel": [
          [
            {
              "node": "Low Testosterone1",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Code in JavaScript": {
        "main": [
          [
            {
              "node": "Copy file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Copy file": {
        "main": [
          [
            {
              "node": "Update a document1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update a document1": {
        "main": [
          [
            {
              "node": "Download file1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Download file1": {
        "main": [
          [
            {
              "node": "Upload file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Upload file": {
        "main": [
          [
            {
              "node": "Share file1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code in JavaScript1": {
        "main": [
          [
            {
              "node": "Copy file1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Copy file1": {
        "main": [
          [
            {
              "node": "Update a document",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update a document": {
        "main": [
          [
            {
              "node": "Download file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Download file": {
        "main": [
          [
            {
              "node": "Upload file1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Upload file1": {
        "main": [
          [
            {
              "node": "Share file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Code in JavaScript2": {
        "main": [
          [
            {
              "node": "Copy file2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Copy file2": {
        "main": [
          [
            {
              "node": "Update a document2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Update a document2": {
        "main": [
          [
            {
              "node": "Download file2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Download file2": {
        "main": [
          [
            {
              "node": "Upload file2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Upload file2": {
        "main": [
          [
            {
              "node": "Share file2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Share file": {
        "main": [
          [
            {
              "node": "Send a message",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Share file1": {
        "main": [
          [
            {
              "node": "Send a message1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Share file2": {
        "main": [
          [
            {
              "node": "Send a message2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook1": {
        "main": [
          [
            {
              "node": "Create a record",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "meta": {
      "templateCredsSetupCompleted": true,
      "instanceId": "20c92f3cd2f1d58ec94265501ddea0d0a6b51ea36bc612ed6d83a67e24b07bfe"
    }
  }